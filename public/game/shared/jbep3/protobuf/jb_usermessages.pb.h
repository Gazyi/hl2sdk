// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jb_usermessages.proto

#ifndef PROTOBUF_jb_5fusermessages_2eproto__INCLUDED
#define PROTOBUF_jb_5fusermessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_jb_5fusermessages_2eproto();
void protobuf_AssignDesc_jb_5fusermessages_2eproto();
void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

class CUsrMsg_VGUIMenu;
class CUsrMsg_VGUIMenu_Subkey;
class CUsrMsg_Geiger;
class CUsrMsg_Train;
class CUsrMsg_HudText;
class CUsrMsg_SayText;
class CUsrMsg_SayText2;
class CUsrMsg_TextMsg;
class CUsrMsg_HudMsg;
class CUsrMsg_Shake;
class CUsrMsg_Fade;
class CUsrMsg_Rumble;
class CUsrMsg_CloseCaption;
class CUsrMsg_CloseCaptionDirect;
class CUsrMsg_VoiceMask;
class CUsrMsg_VoiceMask_PlayerMask;
class CUsrMsg_HintText;
class CUsrMsg_KeyHintText;
class CUsrMsg_DesiredTimescale;
class CUsrMsg_CurrentTimescale;
class CUsrMsg_AchievementEvent;
class CUsrMsg_PlayerStatsUpdate;
class CUsrMsg_PlayerStatsUpdate_Stat;
class CUsrMsg_CallVoteFailed;
class CUsrMsg_VoteStart;
class CUsrMsg_VotePass;
class CUsrMsg_VoteFailed;
class CUsrMsg_VoteSetup;
class CUsrMsg_SendLastKillerDamageToClient;
class CUsrMsg_ShowMenu;
class CUsrMsg_GlowPropTurnOff;
class CUsrMsg_BreakModel;
class CUsrMsg_Damage;
class CJBUsrMsg_ExtVote_Option;
class CJBUsrMsg_ExtVoteStateChange;
class CJBUsrMsg_ExtVoteUpdate;
class CJBUsrMsg_ShowRoundIntro;
class CJBUsrMsg_ShowRoundIntro_CRoundIntroModel;
class CJBUsrMsg_DeathNotice;
class CJBUsrMsg_PlayerSpree;
class CJBUsrMsg_SVTUpdate;
class CJBUsrMsg_Damage;
class CUsrMsg_ResetHud;
class CUsrMsg_GameTitle;
class CUsrMsg_RequestState;
class CUsrMsg_ClientInfo;

enum EJBUserMessages {
  UM_VGUIMenu = 1,
  UM_Geiger = 2,
  UM_Train = 3,
  UM_HudText = 4,
  UM_SayText = 5,
  UM_SayText2 = 6,
  UM_TextMsg = 7,
  UM_HudMsg = 8,
  UM_ResetHud = 9,
  UM_GameTitle = 10,
  UM_Shake = 12,
  UM_Fade = 13,
  UM_Rumble = 14,
  UM_CloseCaption = 15,
  UM_CloseCaptionDirect = 16,
  UM_VoiceMask = 19,
  UM_RequestState = 20,
  UM_HintText = 23,
  UM_KeyHintText = 24,
  UM_DesiredTimescale = 31,
  UM_CurrentTimescale = 32,
  UM_AchievementEvent = 33,
  UM_PlayerStatsUpdate = 36,
  UM_ClientInfo = 39,
  UM_CallVoteFailed = 45,
  UM_VoteStart = 46,
  UM_VotePass = 47,
  UM_VoteFailed = 48,
  UM_VoteSetup = 49,
  UM_SendLastKillerDamageToClient = 51,
  UM_ShowMenu = 54,
  UM_GlowPropTurnOff = 60,
  UM_BreakModel = 70,
  UM_Damage = 71,
  JB_UM_ExtVoteStateChange = 73,
  JB_UM_ExtVoteUpdate = 74,
  JB_UM_ShowRoundIntro = 77,
  JB_UM_DeathNotice = 78,
  JB_UM_PlayerSpree = 79,
  JB_UM_Damage = 80,
  JB_UM_SVTUpdate = 81
};
bool EJBUserMessages_IsValid(int value);
const EJBUserMessages EJBUserMessages_MIN = UM_VGUIMenu;
const EJBUserMessages EJBUserMessages_MAX = JB_UM_SVTUpdate;
const int EJBUserMessages_ARRAYSIZE = EJBUserMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* EJBUserMessages_descriptor();
inline const ::std::string& EJBUserMessages_Name(EJBUserMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    EJBUserMessages_descriptor(), value);
}
inline bool EJBUserMessages_Parse(
    const ::std::string& name, EJBUserMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EJBUserMessages>(
    EJBUserMessages_descriptor(), name, value);
}
// ===================================================================

class CUsrMsg_VGUIMenu_Subkey : public ::google::protobuf::Message {
 public:
  CUsrMsg_VGUIMenu_Subkey();
  virtual ~CUsrMsg_VGUIMenu_Subkey();

  CUsrMsg_VGUIMenu_Subkey(const CUsrMsg_VGUIMenu_Subkey& from);

  inline CUsrMsg_VGUIMenu_Subkey& operator=(const CUsrMsg_VGUIMenu_Subkey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_VGUIMenu_Subkey& default_instance();

  void Swap(CUsrMsg_VGUIMenu_Subkey* other);

  // implements Message ----------------------------------------------

  CUsrMsg_VGUIMenu_Subkey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_VGUIMenu_Subkey& from);
  void MergeFrom(const CUsrMsg_VGUIMenu_Subkey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string str = 2;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 2;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:CUsrMsg_VGUIMenu.Subkey)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_VGUIMenu_Subkey* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_VGUIMenu : public ::google::protobuf::Message {
 public:
  CUsrMsg_VGUIMenu();
  virtual ~CUsrMsg_VGUIMenu();

  CUsrMsg_VGUIMenu(const CUsrMsg_VGUIMenu& from);

  inline CUsrMsg_VGUIMenu& operator=(const CUsrMsg_VGUIMenu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_VGUIMenu& default_instance();

  void Swap(CUsrMsg_VGUIMenu* other);

  // implements Message ----------------------------------------------

  CUsrMsg_VGUIMenu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_VGUIMenu& from);
  void MergeFrom(const CUsrMsg_VGUIMenu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CUsrMsg_VGUIMenu_Subkey Subkey;

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool show = 2;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 2;
  inline bool show() const;
  inline void set_show(bool value);

  // repeated .CUsrMsg_VGUIMenu.Subkey subkeys = 3;
  inline int subkeys_size() const;
  inline void clear_subkeys();
  static const int kSubkeysFieldNumber = 3;
  inline const ::CUsrMsg_VGUIMenu_Subkey& subkeys(int index) const;
  inline ::CUsrMsg_VGUIMenu_Subkey* mutable_subkeys(int index);
  inline ::CUsrMsg_VGUIMenu_Subkey* add_subkeys();
  inline const ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VGUIMenu_Subkey >&
      subkeys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VGUIMenu_Subkey >*
      mutable_subkeys();

  // @@protoc_insertion_point(class_scope:CUsrMsg_VGUIMenu)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_show();
  inline void clear_has_show();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VGUIMenu_Subkey > subkeys_;
  bool show_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_VGUIMenu* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_Geiger : public ::google::protobuf::Message {
 public:
  CUsrMsg_Geiger();
  virtual ~CUsrMsg_Geiger();

  CUsrMsg_Geiger(const CUsrMsg_Geiger& from);

  inline CUsrMsg_Geiger& operator=(const CUsrMsg_Geiger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_Geiger& default_instance();

  void Swap(CUsrMsg_Geiger* other);

  // implements Message ----------------------------------------------

  CUsrMsg_Geiger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_Geiger& from);
  void MergeFrom(const CUsrMsg_Geiger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 range = 1;
  inline bool has_range() const;
  inline void clear_range();
  static const int kRangeFieldNumber = 1;
  inline ::google::protobuf::int32 range() const;
  inline void set_range(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_Geiger)
 private:
  inline void set_has_range();
  inline void clear_has_range();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 range_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_Geiger* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_Train : public ::google::protobuf::Message {
 public:
  CUsrMsg_Train();
  virtual ~CUsrMsg_Train();

  CUsrMsg_Train(const CUsrMsg_Train& from);

  inline CUsrMsg_Train& operator=(const CUsrMsg_Train& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_Train& default_instance();

  void Swap(CUsrMsg_Train* other);

  // implements Message ----------------------------------------------

  CUsrMsg_Train* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_Train& from);
  void MergeFrom(const CUsrMsg_Train& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 train = 1;
  inline bool has_train() const;
  inline void clear_train();
  static const int kTrainFieldNumber = 1;
  inline ::google::protobuf::int32 train() const;
  inline void set_train(::google::protobuf::int32 value);

  // optional int32 train_side = 2;
  inline bool has_train_side() const;
  inline void clear_train_side();
  static const int kTrainSideFieldNumber = 2;
  inline ::google::protobuf::int32 train_side() const;
  inline void set_train_side(::google::protobuf::int32 value);

  // optional bool is_active = 3;
  inline bool has_is_active() const;
  inline void clear_is_active();
  static const int kIsActiveFieldNumber = 3;
  inline bool is_active() const;
  inline void set_is_active(bool value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_Train)
 private:
  inline void set_has_train();
  inline void clear_has_train();
  inline void set_has_train_side();
  inline void clear_has_train_side();
  inline void set_has_is_active();
  inline void clear_has_is_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 train_;
  ::google::protobuf::int32 train_side_;
  bool is_active_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_Train* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_HudText : public ::google::protobuf::Message {
 public:
  CUsrMsg_HudText();
  virtual ~CUsrMsg_HudText();

  CUsrMsg_HudText(const CUsrMsg_HudText& from);

  inline CUsrMsg_HudText& operator=(const CUsrMsg_HudText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_HudText& default_instance();

  void Swap(CUsrMsg_HudText* other);

  // implements Message ----------------------------------------------

  CUsrMsg_HudText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_HudText& from);
  void MergeFrom(const CUsrMsg_HudText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CUsrMsg_HudText)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* text_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_HudText* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_SayText : public ::google::protobuf::Message {
 public:
  CUsrMsg_SayText();
  virtual ~CUsrMsg_SayText();

  CUsrMsg_SayText(const CUsrMsg_SayText& from);

  inline CUsrMsg_SayText& operator=(const CUsrMsg_SayText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_SayText& default_instance();

  void Swap(CUsrMsg_SayText* other);

  // implements Message ----------------------------------------------

  CUsrMsg_SayText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_SayText& from);
  void MergeFrom(const CUsrMsg_SayText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ent_idx = 1;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 1;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);

  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // optional bool chat = 3;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 3;
  inline bool chat() const;
  inline void set_chat(bool value);

  // optional bool textallchat = 4;
  inline bool has_textallchat() const;
  inline void clear_textallchat();
  static const int kTextallchatFieldNumber = 4;
  inline bool textallchat() const;
  inline void set_textallchat(bool value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_SayText)
 private:
  inline void set_has_ent_idx();
  inline void clear_has_ent_idx();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_chat();
  inline void clear_has_chat();
  inline void set_has_textallchat();
  inline void clear_has_textallchat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* text_;
  ::google::protobuf::int32 ent_idx_;
  bool chat_;
  bool textallchat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_SayText* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_SayText2 : public ::google::protobuf::Message {
 public:
  CUsrMsg_SayText2();
  virtual ~CUsrMsg_SayText2();

  CUsrMsg_SayText2(const CUsrMsg_SayText2& from);

  inline CUsrMsg_SayText2& operator=(const CUsrMsg_SayText2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_SayText2& default_instance();

  void Swap(CUsrMsg_SayText2* other);

  // implements Message ----------------------------------------------

  CUsrMsg_SayText2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_SayText2& from);
  void MergeFrom(const CUsrMsg_SayText2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ent_idx = 1;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 1;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);

  // optional bool chat = 2;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 2;
  inline bool chat() const;
  inline void set_chat(bool value);

  // optional string msg_name = 3;
  inline bool has_msg_name() const;
  inline void clear_msg_name();
  static const int kMsgNameFieldNumber = 3;
  inline const ::std::string& msg_name() const;
  inline void set_msg_name(const ::std::string& value);
  inline void set_msg_name(const char* value);
  inline void set_msg_name(const char* value, size_t size);
  inline ::std::string* mutable_msg_name();
  inline ::std::string* release_msg_name();
  inline void set_allocated_msg_name(::std::string* msg_name);

  // repeated string params = 4;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // optional bool textallchat = 5;
  inline bool has_textallchat() const;
  inline void clear_textallchat();
  static const int kTextallchatFieldNumber = 5;
  inline bool textallchat() const;
  inline void set_textallchat(bool value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_SayText2)
 private:
  inline void set_has_ent_idx();
  inline void clear_has_ent_idx();
  inline void set_has_chat();
  inline void clear_has_chat();
  inline void set_has_msg_name();
  inline void clear_has_msg_name();
  inline void set_has_textallchat();
  inline void clear_has_textallchat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ent_idx_;
  bool chat_;
  bool textallchat_;
  ::std::string* msg_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_SayText2* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_TextMsg : public ::google::protobuf::Message {
 public:
  CUsrMsg_TextMsg();
  virtual ~CUsrMsg_TextMsg();

  CUsrMsg_TextMsg(const CUsrMsg_TextMsg& from);

  inline CUsrMsg_TextMsg& operator=(const CUsrMsg_TextMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_TextMsg& default_instance();

  void Swap(CUsrMsg_TextMsg* other);

  // implements Message ----------------------------------------------

  CUsrMsg_TextMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_TextMsg& from);
  void MergeFrom(const CUsrMsg_TextMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 msg_dst = 1;
  inline bool has_msg_dst() const;
  inline void clear_msg_dst();
  static const int kMsgDstFieldNumber = 1;
  inline ::google::protobuf::int32 msg_dst() const;
  inline void set_msg_dst(::google::protobuf::int32 value);

  // repeated string params = 3;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 3;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // @@protoc_insertion_point(class_scope:CUsrMsg_TextMsg)
 private:
  inline void set_has_msg_dst();
  inline void clear_has_msg_dst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::int32 msg_dst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_TextMsg* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_HudMsg : public ::google::protobuf::Message {
 public:
  CUsrMsg_HudMsg();
  virtual ~CUsrMsg_HudMsg();

  CUsrMsg_HudMsg(const CUsrMsg_HudMsg& from);

  inline CUsrMsg_HudMsg& operator=(const CUsrMsg_HudMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_HudMsg& default_instance();

  void Swap(CUsrMsg_HudMsg* other);

  // implements Message ----------------------------------------------

  CUsrMsg_HudMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_HudMsg& from);
  void MergeFrom(const CUsrMsg_HudMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);

  // optional .CMsgVector2D pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::CMsgVector2D& pos() const;
  inline ::CMsgVector2D* mutable_pos();
  inline ::CMsgVector2D* release_pos();
  inline void set_allocated_pos(::CMsgVector2D* pos);

  // optional .CMsgRGBA clr1 = 3;
  inline bool has_clr1() const;
  inline void clear_clr1();
  static const int kClr1FieldNumber = 3;
  inline const ::CMsgRGBA& clr1() const;
  inline ::CMsgRGBA* mutable_clr1();
  inline ::CMsgRGBA* release_clr1();
  inline void set_allocated_clr1(::CMsgRGBA* clr1);

  // optional .CMsgRGBA clr2 = 4;
  inline bool has_clr2() const;
  inline void clear_clr2();
  static const int kClr2FieldNumber = 4;
  inline const ::CMsgRGBA& clr2() const;
  inline ::CMsgRGBA* mutable_clr2();
  inline ::CMsgRGBA* release_clr2();
  inline void set_allocated_clr2(::CMsgRGBA* clr2);

  // optional int32 effect = 5;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 5;
  inline ::google::protobuf::int32 effect() const;
  inline void set_effect(::google::protobuf::int32 value);

  // optional float fade_in_time = 6;
  inline bool has_fade_in_time() const;
  inline void clear_fade_in_time();
  static const int kFadeInTimeFieldNumber = 6;
  inline float fade_in_time() const;
  inline void set_fade_in_time(float value);

  // optional float fade_out_time = 7;
  inline bool has_fade_out_time() const;
  inline void clear_fade_out_time();
  static const int kFadeOutTimeFieldNumber = 7;
  inline float fade_out_time() const;
  inline void set_fade_out_time(float value);

  // optional float hold_time = 9;
  inline bool has_hold_time() const;
  inline void clear_hold_time();
  static const int kHoldTimeFieldNumber = 9;
  inline float hold_time() const;
  inline void set_hold_time(float value);

  // optional float fx_time = 10;
  inline bool has_fx_time() const;
  inline void clear_fx_time();
  static const int kFxTimeFieldNumber = 10;
  inline float fx_time() const;
  inline void set_fx_time(float value);

  // optional string text = 11;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 11;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CUsrMsg_HudMsg)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_clr1();
  inline void clear_has_clr1();
  inline void set_has_clr2();
  inline void clear_has_clr2();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_fade_in_time();
  inline void clear_has_fade_in_time();
  inline void set_has_fade_out_time();
  inline void clear_has_fade_out_time();
  inline void set_has_hold_time();
  inline void clear_has_hold_time();
  inline void set_has_fx_time();
  inline void clear_has_fx_time();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CMsgVector2D* pos_;
  ::CMsgRGBA* clr1_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 effect_;
  ::CMsgRGBA* clr2_;
  float fade_in_time_;
  float fade_out_time_;
  float hold_time_;
  float fx_time_;
  ::std::string* text_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_HudMsg* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_Shake : public ::google::protobuf::Message {
 public:
  CUsrMsg_Shake();
  virtual ~CUsrMsg_Shake();

  CUsrMsg_Shake(const CUsrMsg_Shake& from);

  inline CUsrMsg_Shake& operator=(const CUsrMsg_Shake& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_Shake& default_instance();

  void Swap(CUsrMsg_Shake* other);

  // implements Message ----------------------------------------------

  CUsrMsg_Shake* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_Shake& from);
  void MergeFrom(const CUsrMsg_Shake& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline ::google::protobuf::int32 command() const;
  inline void set_command(::google::protobuf::int32 value);

  // optional float local_amplitude = 2;
  inline bool has_local_amplitude() const;
  inline void clear_local_amplitude();
  static const int kLocalAmplitudeFieldNumber = 2;
  inline float local_amplitude() const;
  inline void set_local_amplitude(float value);

  // optional float frequency = 3;
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 3;
  inline float frequency() const;
  inline void set_frequency(float value);

  // optional float duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline float duration() const;
  inline void set_duration(float value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_Shake)
 private:
  inline void set_has_command();
  inline void clear_has_command();
  inline void set_has_local_amplitude();
  inline void clear_has_local_amplitude();
  inline void set_has_frequency();
  inline void clear_has_frequency();
  inline void set_has_duration();
  inline void clear_has_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 command_;
  float local_amplitude_;
  float frequency_;
  float duration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_Shake* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_Fade : public ::google::protobuf::Message {
 public:
  CUsrMsg_Fade();
  virtual ~CUsrMsg_Fade();

  CUsrMsg_Fade(const CUsrMsg_Fade& from);

  inline CUsrMsg_Fade& operator=(const CUsrMsg_Fade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_Fade& default_instance();

  void Swap(CUsrMsg_Fade* other);

  // implements Message ----------------------------------------------

  CUsrMsg_Fade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_Fade& from);
  void MergeFrom(const CUsrMsg_Fade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 duration = 1;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 1;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // optional int32 hold_time = 2;
  inline bool has_hold_time() const;
  inline void clear_hold_time();
  static const int kHoldTimeFieldNumber = 2;
  inline ::google::protobuf::int32 hold_time() const;
  inline void set_hold_time(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // optional .CMsgRGBA clr = 4;
  inline bool has_clr() const;
  inline void clear_clr();
  static const int kClrFieldNumber = 4;
  inline const ::CMsgRGBA& clr() const;
  inline ::CMsgRGBA* mutable_clr();
  inline ::CMsgRGBA* release_clr();
  inline void set_allocated_clr(::CMsgRGBA* clr);

  // @@protoc_insertion_point(class_scope:CUsrMsg_Fade)
 private:
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_hold_time();
  inline void clear_has_hold_time();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_clr();
  inline void clear_has_clr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 hold_time_;
  ::CMsgRGBA* clr_;
  ::google::protobuf::int32 flags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_Fade* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_Rumble : public ::google::protobuf::Message {
 public:
  CUsrMsg_Rumble();
  virtual ~CUsrMsg_Rumble();

  CUsrMsg_Rumble(const CUsrMsg_Rumble& from);

  inline CUsrMsg_Rumble& operator=(const CUsrMsg_Rumble& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_Rumble& default_instance();

  void Swap(CUsrMsg_Rumble* other);

  // implements Message ----------------------------------------------

  CUsrMsg_Rumble* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_Rumble& from);
  void MergeFrom(const CUsrMsg_Rumble& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline ::google::protobuf::int32 data() const;
  inline void set_data(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_Rumble)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 data_;
  ::google::protobuf::int32 flags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_Rumble* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_CloseCaption : public ::google::protobuf::Message {
 public:
  CUsrMsg_CloseCaption();
  virtual ~CUsrMsg_CloseCaption();

  CUsrMsg_CloseCaption(const CUsrMsg_CloseCaption& from);

  inline CUsrMsg_CloseCaption& operator=(const CUsrMsg_CloseCaption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_CloseCaption& default_instance();

  void Swap(CUsrMsg_CloseCaption* other);

  // implements Message ----------------------------------------------

  CUsrMsg_CloseCaption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_CloseCaption& from);
  void MergeFrom(const CUsrMsg_CloseCaption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hash = 1;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 1;
  inline ::google::protobuf::uint32 hash() const;
  inline void set_hash(::google::protobuf::uint32 value);

  // optional int32 duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // optional bool from_player = 3;
  inline bool has_from_player() const;
  inline void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  inline bool from_player() const;
  inline void set_from_player(bool value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_CloseCaption)
 private:
  inline void set_has_hash();
  inline void clear_has_hash();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_from_player();
  inline void clear_has_from_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hash_;
  ::google::protobuf::int32 duration_;
  bool from_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_CloseCaption* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_CloseCaptionDirect : public ::google::protobuf::Message {
 public:
  CUsrMsg_CloseCaptionDirect();
  virtual ~CUsrMsg_CloseCaptionDirect();

  CUsrMsg_CloseCaptionDirect(const CUsrMsg_CloseCaptionDirect& from);

  inline CUsrMsg_CloseCaptionDirect& operator=(const CUsrMsg_CloseCaptionDirect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_CloseCaptionDirect& default_instance();

  void Swap(CUsrMsg_CloseCaptionDirect* other);

  // implements Message ----------------------------------------------

  CUsrMsg_CloseCaptionDirect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_CloseCaptionDirect& from);
  void MergeFrom(const CUsrMsg_CloseCaptionDirect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hash = 1;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 1;
  inline ::google::protobuf::uint32 hash() const;
  inline void set_hash(::google::protobuf::uint32 value);

  // optional int32 duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // optional bool from_player = 3;
  inline bool has_from_player() const;
  inline void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  inline bool from_player() const;
  inline void set_from_player(bool value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_CloseCaptionDirect)
 private:
  inline void set_has_hash();
  inline void clear_has_hash();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_from_player();
  inline void clear_has_from_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hash_;
  ::google::protobuf::int32 duration_;
  bool from_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_CloseCaptionDirect* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_VoiceMask_PlayerMask : public ::google::protobuf::Message {
 public:
  CUsrMsg_VoiceMask_PlayerMask();
  virtual ~CUsrMsg_VoiceMask_PlayerMask();

  CUsrMsg_VoiceMask_PlayerMask(const CUsrMsg_VoiceMask_PlayerMask& from);

  inline CUsrMsg_VoiceMask_PlayerMask& operator=(const CUsrMsg_VoiceMask_PlayerMask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_VoiceMask_PlayerMask& default_instance();

  void Swap(CUsrMsg_VoiceMask_PlayerMask* other);

  // implements Message ----------------------------------------------

  CUsrMsg_VoiceMask_PlayerMask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_VoiceMask_PlayerMask& from);
  void MergeFrom(const CUsrMsg_VoiceMask_PlayerMask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 game_rules_mask = 1;
  inline bool has_game_rules_mask() const;
  inline void clear_game_rules_mask();
  static const int kGameRulesMaskFieldNumber = 1;
  inline ::google::protobuf::int32 game_rules_mask() const;
  inline void set_game_rules_mask(::google::protobuf::int32 value);

  // optional int32 ban_masks = 2;
  inline bool has_ban_masks() const;
  inline void clear_ban_masks();
  static const int kBanMasksFieldNumber = 2;
  inline ::google::protobuf::int32 ban_masks() const;
  inline void set_ban_masks(::google::protobuf::int32 value);

  // optional int32 proximity_mask = 3;
  inline bool has_proximity_mask() const;
  inline void clear_proximity_mask();
  static const int kProximityMaskFieldNumber = 3;
  inline ::google::protobuf::int32 proximity_mask() const;
  inline void set_proximity_mask(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_VoiceMask.PlayerMask)
 private:
  inline void set_has_game_rules_mask();
  inline void clear_has_game_rules_mask();
  inline void set_has_ban_masks();
  inline void clear_has_ban_masks();
  inline void set_has_proximity_mask();
  inline void clear_has_proximity_mask();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 game_rules_mask_;
  ::google::protobuf::int32 ban_masks_;
  ::google::protobuf::int32 proximity_mask_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_VoiceMask_PlayerMask* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_VoiceMask : public ::google::protobuf::Message {
 public:
  CUsrMsg_VoiceMask();
  virtual ~CUsrMsg_VoiceMask();

  CUsrMsg_VoiceMask(const CUsrMsg_VoiceMask& from);

  inline CUsrMsg_VoiceMask& operator=(const CUsrMsg_VoiceMask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_VoiceMask& default_instance();

  void Swap(CUsrMsg_VoiceMask* other);

  // implements Message ----------------------------------------------

  CUsrMsg_VoiceMask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_VoiceMask& from);
  void MergeFrom(const CUsrMsg_VoiceMask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CUsrMsg_VoiceMask_PlayerMask PlayerMask;

  // accessors -------------------------------------------------------

  // repeated .CUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  inline int player_masks_size() const;
  inline void clear_player_masks();
  static const int kPlayerMasksFieldNumber = 1;
  inline const ::CUsrMsg_VoiceMask_PlayerMask& player_masks(int index) const;
  inline ::CUsrMsg_VoiceMask_PlayerMask* mutable_player_masks(int index);
  inline ::CUsrMsg_VoiceMask_PlayerMask* add_player_masks();
  inline const ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VoiceMask_PlayerMask >&
      player_masks() const;
  inline ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VoiceMask_PlayerMask >*
      mutable_player_masks();

  // optional bool player_mod_enable = 2;
  inline bool has_player_mod_enable() const;
  inline void clear_player_mod_enable();
  static const int kPlayerModEnableFieldNumber = 2;
  inline bool player_mod_enable() const;
  inline void set_player_mod_enable(bool value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_VoiceMask)
 private:
  inline void set_has_player_mod_enable();
  inline void clear_has_player_mod_enable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VoiceMask_PlayerMask > player_masks_;
  bool player_mod_enable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_VoiceMask* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_HintText : public ::google::protobuf::Message {
 public:
  CUsrMsg_HintText();
  virtual ~CUsrMsg_HintText();

  CUsrMsg_HintText(const CUsrMsg_HintText& from);

  inline CUsrMsg_HintText& operator=(const CUsrMsg_HintText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_HintText& default_instance();

  void Swap(CUsrMsg_HintText* other);

  // implements Message ----------------------------------------------

  CUsrMsg_HintText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_HintText& from);
  void MergeFrom(const CUsrMsg_HintText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CUsrMsg_HintText)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* text_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_HintText* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_KeyHintText : public ::google::protobuf::Message {
 public:
  CUsrMsg_KeyHintText();
  virtual ~CUsrMsg_KeyHintText();

  CUsrMsg_KeyHintText(const CUsrMsg_KeyHintText& from);

  inline CUsrMsg_KeyHintText& operator=(const CUsrMsg_KeyHintText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_KeyHintText& default_instance();

  void Swap(CUsrMsg_KeyHintText* other);

  // implements Message ----------------------------------------------

  CUsrMsg_KeyHintText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_KeyHintText& from);
  void MergeFrom(const CUsrMsg_KeyHintText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string hints = 1;
  inline int hints_size() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 1;
  inline const ::std::string& hints(int index) const;
  inline ::std::string* mutable_hints(int index);
  inline void set_hints(int index, const ::std::string& value);
  inline void set_hints(int index, const char* value);
  inline void set_hints(int index, const char* value, size_t size);
  inline ::std::string* add_hints();
  inline void add_hints(const ::std::string& value);
  inline void add_hints(const char* value);
  inline void add_hints(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& hints() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_hints();

  // @@protoc_insertion_point(class_scope:CUsrMsg_KeyHintText)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> hints_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_KeyHintText* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_DesiredTimescale : public ::google::protobuf::Message {
 public:
  CUsrMsg_DesiredTimescale();
  virtual ~CUsrMsg_DesiredTimescale();

  CUsrMsg_DesiredTimescale(const CUsrMsg_DesiredTimescale& from);

  inline CUsrMsg_DesiredTimescale& operator=(const CUsrMsg_DesiredTimescale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_DesiredTimescale& default_instance();

  void Swap(CUsrMsg_DesiredTimescale* other);

  // implements Message ----------------------------------------------

  CUsrMsg_DesiredTimescale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_DesiredTimescale& from);
  void MergeFrom(const CUsrMsg_DesiredTimescale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float desired_timescale = 1;
  inline bool has_desired_timescale() const;
  inline void clear_desired_timescale();
  static const int kDesiredTimescaleFieldNumber = 1;
  inline float desired_timescale() const;
  inline void set_desired_timescale(float value);

  // optional float duration_realtime_sec = 2;
  inline bool has_duration_realtime_sec() const;
  inline void clear_duration_realtime_sec();
  static const int kDurationRealtimeSecFieldNumber = 2;
  inline float duration_realtime_sec() const;
  inline void set_duration_realtime_sec(float value);

  // optional int32 interpolator_type = 3;
  inline bool has_interpolator_type() const;
  inline void clear_interpolator_type();
  static const int kInterpolatorTypeFieldNumber = 3;
  inline ::google::protobuf::int32 interpolator_type() const;
  inline void set_interpolator_type(::google::protobuf::int32 value);

  // optional float start_blend_time = 4;
  inline bool has_start_blend_time() const;
  inline void clear_start_blend_time();
  static const int kStartBlendTimeFieldNumber = 4;
  inline float start_blend_time() const;
  inline void set_start_blend_time(float value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_DesiredTimescale)
 private:
  inline void set_has_desired_timescale();
  inline void clear_has_desired_timescale();
  inline void set_has_duration_realtime_sec();
  inline void clear_has_duration_realtime_sec();
  inline void set_has_interpolator_type();
  inline void clear_has_interpolator_type();
  inline void set_has_start_blend_time();
  inline void clear_has_start_blend_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float desired_timescale_;
  float duration_realtime_sec_;
  ::google::protobuf::int32 interpolator_type_;
  float start_blend_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_DesiredTimescale* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_CurrentTimescale : public ::google::protobuf::Message {
 public:
  CUsrMsg_CurrentTimescale();
  virtual ~CUsrMsg_CurrentTimescale();

  CUsrMsg_CurrentTimescale(const CUsrMsg_CurrentTimescale& from);

  inline CUsrMsg_CurrentTimescale& operator=(const CUsrMsg_CurrentTimescale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_CurrentTimescale& default_instance();

  void Swap(CUsrMsg_CurrentTimescale* other);

  // implements Message ----------------------------------------------

  CUsrMsg_CurrentTimescale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_CurrentTimescale& from);
  void MergeFrom(const CUsrMsg_CurrentTimescale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float cur_timescale = 1;
  inline bool has_cur_timescale() const;
  inline void clear_cur_timescale();
  static const int kCurTimescaleFieldNumber = 1;
  inline float cur_timescale() const;
  inline void set_cur_timescale(float value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_CurrentTimescale)
 private:
  inline void set_has_cur_timescale();
  inline void clear_has_cur_timescale();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float cur_timescale_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_CurrentTimescale* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_AchievementEvent : public ::google::protobuf::Message {
 public:
  CUsrMsg_AchievementEvent();
  virtual ~CUsrMsg_AchievementEvent();

  CUsrMsg_AchievementEvent(const CUsrMsg_AchievementEvent& from);

  inline CUsrMsg_AchievementEvent& operator=(const CUsrMsg_AchievementEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_AchievementEvent& default_instance();

  void Swap(CUsrMsg_AchievementEvent* other);

  // implements Message ----------------------------------------------

  CUsrMsg_AchievementEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_AchievementEvent& from);
  void MergeFrom(const CUsrMsg_AchievementEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 achievement = 1;
  inline bool has_achievement() const;
  inline void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  inline ::google::protobuf::int32 achievement() const;
  inline void set_achievement(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_AchievementEvent)
 private:
  inline void set_has_achievement();
  inline void clear_has_achievement();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 achievement_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_AchievementEvent* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_PlayerStatsUpdate_Stat : public ::google::protobuf::Message {
 public:
  CUsrMsg_PlayerStatsUpdate_Stat();
  virtual ~CUsrMsg_PlayerStatsUpdate_Stat();

  CUsrMsg_PlayerStatsUpdate_Stat(const CUsrMsg_PlayerStatsUpdate_Stat& from);

  inline CUsrMsg_PlayerStatsUpdate_Stat& operator=(const CUsrMsg_PlayerStatsUpdate_Stat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_PlayerStatsUpdate_Stat& default_instance();

  void Swap(CUsrMsg_PlayerStatsUpdate_Stat* other);

  // implements Message ----------------------------------------------

  CUsrMsg_PlayerStatsUpdate_Stat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_PlayerStatsUpdate_Stat& from);
  void MergeFrom(const CUsrMsg_PlayerStatsUpdate_Stat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);

  // optional int32 delta = 2;
  inline bool has_delta() const;
  inline void clear_delta();
  static const int kDeltaFieldNumber = 2;
  inline ::google::protobuf::int32 delta() const;
  inline void set_delta(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_PlayerStatsUpdate.Stat)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_delta();
  inline void clear_has_delta();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 delta_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_PlayerStatsUpdate_Stat* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_PlayerStatsUpdate : public ::google::protobuf::Message {
 public:
  CUsrMsg_PlayerStatsUpdate();
  virtual ~CUsrMsg_PlayerStatsUpdate();

  CUsrMsg_PlayerStatsUpdate(const CUsrMsg_PlayerStatsUpdate& from);

  inline CUsrMsg_PlayerStatsUpdate& operator=(const CUsrMsg_PlayerStatsUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_PlayerStatsUpdate& default_instance();

  void Swap(CUsrMsg_PlayerStatsUpdate* other);

  // implements Message ----------------------------------------------

  CUsrMsg_PlayerStatsUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_PlayerStatsUpdate& from);
  void MergeFrom(const CUsrMsg_PlayerStatsUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CUsrMsg_PlayerStatsUpdate_Stat Stat;

  // accessors -------------------------------------------------------

  // optional int32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // repeated .CUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 4;
  inline const ::CUsrMsg_PlayerStatsUpdate_Stat& stats(int index) const;
  inline ::CUsrMsg_PlayerStatsUpdate_Stat* mutable_stats(int index);
  inline ::CUsrMsg_PlayerStatsUpdate_Stat* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::CUsrMsg_PlayerStatsUpdate_Stat >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CUsrMsg_PlayerStatsUpdate_Stat >*
      mutable_stats();

  // optional int32 user_id = 5;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 5;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);

  // optional int32 crc = 6;
  inline bool has_crc() const;
  inline void clear_crc();
  static const int kCrcFieldNumber = 6;
  inline ::google::protobuf::int32 crc() const;
  inline void set_crc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_PlayerStatsUpdate)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_crc();
  inline void clear_has_crc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CUsrMsg_PlayerStatsUpdate_Stat > stats_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 crc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_PlayerStatsUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_CallVoteFailed : public ::google::protobuf::Message {
 public:
  CUsrMsg_CallVoteFailed();
  virtual ~CUsrMsg_CallVoteFailed();

  CUsrMsg_CallVoteFailed(const CUsrMsg_CallVoteFailed& from);

  inline CUsrMsg_CallVoteFailed& operator=(const CUsrMsg_CallVoteFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_CallVoteFailed& default_instance();

  void Swap(CUsrMsg_CallVoteFailed* other);

  // implements Message ----------------------------------------------

  CUsrMsg_CallVoteFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_CallVoteFailed& from);
  void MergeFrom(const CUsrMsg_CallVoteFailed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_CallVoteFailed)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 reason_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_CallVoteFailed* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_VoteStart : public ::google::protobuf::Message {
 public:
  CUsrMsg_VoteStart();
  virtual ~CUsrMsg_VoteStart();

  CUsrMsg_VoteStart(const CUsrMsg_VoteStart& from);

  inline CUsrMsg_VoteStart& operator=(const CUsrMsg_VoteStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_VoteStart& default_instance();

  void Swap(CUsrMsg_VoteStart* other);

  // implements Message ----------------------------------------------

  CUsrMsg_VoteStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_VoteStart& from);
  void MergeFrom(const CUsrMsg_VoteStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // optional int32 ent_idx = 2;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 2;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);

  // optional int32 vote_type = 3;
  inline bool has_vote_type() const;
  inline void clear_vote_type();
  static const int kVoteTypeFieldNumber = 3;
  inline ::google::protobuf::int32 vote_type() const;
  inline void set_vote_type(::google::protobuf::int32 value);

  // optional string disp_str = 4;
  inline bool has_disp_str() const;
  inline void clear_disp_str();
  static const int kDispStrFieldNumber = 4;
  inline const ::std::string& disp_str() const;
  inline void set_disp_str(const ::std::string& value);
  inline void set_disp_str(const char* value);
  inline void set_disp_str(const char* value, size_t size);
  inline ::std::string* mutable_disp_str();
  inline ::std::string* release_disp_str();
  inline void set_allocated_disp_str(::std::string* disp_str);

  // optional string details_str = 5;
  inline bool has_details_str() const;
  inline void clear_details_str();
  static const int kDetailsStrFieldNumber = 5;
  inline const ::std::string& details_str() const;
  inline void set_details_str(const ::std::string& value);
  inline void set_details_str(const char* value);
  inline void set_details_str(const char* value, size_t size);
  inline ::std::string* mutable_details_str();
  inline ::std::string* release_details_str();
  inline void set_allocated_details_str(::std::string* details_str);

  // optional string other_team_str = 6;
  inline bool has_other_team_str() const;
  inline void clear_other_team_str();
  static const int kOtherTeamStrFieldNumber = 6;
  inline const ::std::string& other_team_str() const;
  inline void set_other_team_str(const ::std::string& value);
  inline void set_other_team_str(const char* value);
  inline void set_other_team_str(const char* value, size_t size);
  inline ::std::string* mutable_other_team_str();
  inline ::std::string* release_other_team_str();
  inline void set_allocated_other_team_str(::std::string* other_team_str);

  // optional bool is_yes_no_vote = 7;
  inline bool has_is_yes_no_vote() const;
  inline void clear_is_yes_no_vote();
  static const int kIsYesNoVoteFieldNumber = 7;
  inline bool is_yes_no_vote() const;
  inline void set_is_yes_no_vote(bool value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_VoteStart)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_ent_idx();
  inline void clear_has_ent_idx();
  inline void set_has_vote_type();
  inline void clear_has_vote_type();
  inline void set_has_disp_str();
  inline void clear_has_disp_str();
  inline void set_has_details_str();
  inline void clear_has_details_str();
  inline void set_has_other_team_str();
  inline void clear_has_other_team_str();
  inline void set_has_is_yes_no_vote();
  inline void clear_has_is_yes_no_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 ent_idx_;
  ::std::string* disp_str_;
  ::std::string* details_str_;
  ::google::protobuf::int32 vote_type_;
  bool is_yes_no_vote_;
  ::std::string* other_team_str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_VoteStart* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_VotePass : public ::google::protobuf::Message {
 public:
  CUsrMsg_VotePass();
  virtual ~CUsrMsg_VotePass();

  CUsrMsg_VotePass(const CUsrMsg_VotePass& from);

  inline CUsrMsg_VotePass& operator=(const CUsrMsg_VotePass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_VotePass& default_instance();

  void Swap(CUsrMsg_VotePass* other);

  // implements Message ----------------------------------------------

  CUsrMsg_VotePass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_VotePass& from);
  void MergeFrom(const CUsrMsg_VotePass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // optional int32 vote_type = 2;
  inline bool has_vote_type() const;
  inline void clear_vote_type();
  static const int kVoteTypeFieldNumber = 2;
  inline ::google::protobuf::int32 vote_type() const;
  inline void set_vote_type(::google::protobuf::int32 value);

  // optional string disp_str = 3;
  inline bool has_disp_str() const;
  inline void clear_disp_str();
  static const int kDispStrFieldNumber = 3;
  inline const ::std::string& disp_str() const;
  inline void set_disp_str(const ::std::string& value);
  inline void set_disp_str(const char* value);
  inline void set_disp_str(const char* value, size_t size);
  inline ::std::string* mutable_disp_str();
  inline ::std::string* release_disp_str();
  inline void set_allocated_disp_str(::std::string* disp_str);

  // optional string details_str = 4;
  inline bool has_details_str() const;
  inline void clear_details_str();
  static const int kDetailsStrFieldNumber = 4;
  inline const ::std::string& details_str() const;
  inline void set_details_str(const ::std::string& value);
  inline void set_details_str(const char* value);
  inline void set_details_str(const char* value, size_t size);
  inline ::std::string* mutable_details_str();
  inline ::std::string* release_details_str();
  inline void set_allocated_details_str(::std::string* details_str);

  // @@protoc_insertion_point(class_scope:CUsrMsg_VotePass)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_vote_type();
  inline void clear_has_vote_type();
  inline void set_has_disp_str();
  inline void clear_has_disp_str();
  inline void set_has_details_str();
  inline void clear_has_details_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 vote_type_;
  ::std::string* disp_str_;
  ::std::string* details_str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_VotePass* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_VoteFailed : public ::google::protobuf::Message {
 public:
  CUsrMsg_VoteFailed();
  virtual ~CUsrMsg_VoteFailed();

  CUsrMsg_VoteFailed(const CUsrMsg_VoteFailed& from);

  inline CUsrMsg_VoteFailed& operator=(const CUsrMsg_VoteFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_VoteFailed& default_instance();

  void Swap(CUsrMsg_VoteFailed* other);

  // implements Message ----------------------------------------------

  CUsrMsg_VoteFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_VoteFailed& from);
  void MergeFrom(const CUsrMsg_VoteFailed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // optional int32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_VoteFailed)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_VoteFailed* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_VoteSetup : public ::google::protobuf::Message {
 public:
  CUsrMsg_VoteSetup();
  virtual ~CUsrMsg_VoteSetup();

  CUsrMsg_VoteSetup(const CUsrMsg_VoteSetup& from);

  inline CUsrMsg_VoteSetup& operator=(const CUsrMsg_VoteSetup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_VoteSetup& default_instance();

  void Swap(CUsrMsg_VoteSetup* other);

  // implements Message ----------------------------------------------

  CUsrMsg_VoteSetup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_VoteSetup& from);
  void MergeFrom(const CUsrMsg_VoteSetup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string potential_issues = 1;
  inline int potential_issues_size() const;
  inline void clear_potential_issues();
  static const int kPotentialIssuesFieldNumber = 1;
  inline const ::std::string& potential_issues(int index) const;
  inline ::std::string* mutable_potential_issues(int index);
  inline void set_potential_issues(int index, const ::std::string& value);
  inline void set_potential_issues(int index, const char* value);
  inline void set_potential_issues(int index, const char* value, size_t size);
  inline ::std::string* add_potential_issues();
  inline void add_potential_issues(const ::std::string& value);
  inline void add_potential_issues(const char* value);
  inline void add_potential_issues(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& potential_issues() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_potential_issues();

  // @@protoc_insertion_point(class_scope:CUsrMsg_VoteSetup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> potential_issues_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_VoteSetup* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_SendLastKillerDamageToClient : public ::google::protobuf::Message {
 public:
  CUsrMsg_SendLastKillerDamageToClient();
  virtual ~CUsrMsg_SendLastKillerDamageToClient();

  CUsrMsg_SendLastKillerDamageToClient(const CUsrMsg_SendLastKillerDamageToClient& from);

  inline CUsrMsg_SendLastKillerDamageToClient& operator=(const CUsrMsg_SendLastKillerDamageToClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_SendLastKillerDamageToClient& default_instance();

  void Swap(CUsrMsg_SendLastKillerDamageToClient* other);

  // implements Message ----------------------------------------------

  CUsrMsg_SendLastKillerDamageToClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_SendLastKillerDamageToClient& from);
  void MergeFrom(const CUsrMsg_SendLastKillerDamageToClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num_hits_given = 1;
  inline bool has_num_hits_given() const;
  inline void clear_num_hits_given();
  static const int kNumHitsGivenFieldNumber = 1;
  inline ::google::protobuf::int32 num_hits_given() const;
  inline void set_num_hits_given(::google::protobuf::int32 value);

  // optional int32 damage_given = 2;
  inline bool has_damage_given() const;
  inline void clear_damage_given();
  static const int kDamageGivenFieldNumber = 2;
  inline ::google::protobuf::int32 damage_given() const;
  inline void set_damage_given(::google::protobuf::int32 value);

  // optional int32 num_hits_taken = 3;
  inline bool has_num_hits_taken() const;
  inline void clear_num_hits_taken();
  static const int kNumHitsTakenFieldNumber = 3;
  inline ::google::protobuf::int32 num_hits_taken() const;
  inline void set_num_hits_taken(::google::protobuf::int32 value);

  // optional int32 damage_taken = 4;
  inline bool has_damage_taken() const;
  inline void clear_damage_taken();
  static const int kDamageTakenFieldNumber = 4;
  inline ::google::protobuf::int32 damage_taken() const;
  inline void set_damage_taken(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_SendLastKillerDamageToClient)
 private:
  inline void set_has_num_hits_given();
  inline void clear_has_num_hits_given();
  inline void set_has_damage_given();
  inline void clear_has_damage_given();
  inline void set_has_num_hits_taken();
  inline void clear_has_num_hits_taken();
  inline void set_has_damage_taken();
  inline void clear_has_damage_taken();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_hits_given_;
  ::google::protobuf::int32 damage_given_;
  ::google::protobuf::int32 num_hits_taken_;
  ::google::protobuf::int32 damage_taken_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_SendLastKillerDamageToClient* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_ShowMenu : public ::google::protobuf::Message {
 public:
  CUsrMsg_ShowMenu();
  virtual ~CUsrMsg_ShowMenu();

  CUsrMsg_ShowMenu(const CUsrMsg_ShowMenu& from);

  inline CUsrMsg_ShowMenu& operator=(const CUsrMsg_ShowMenu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_ShowMenu& default_instance();

  void Swap(CUsrMsg_ShowMenu* other);

  // implements Message ----------------------------------------------

  CUsrMsg_ShowMenu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_ShowMenu& from);
  void MergeFrom(const CUsrMsg_ShowMenu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bits_valid_slots = 1;
  inline bool has_bits_valid_slots() const;
  inline void clear_bits_valid_slots();
  static const int kBitsValidSlotsFieldNumber = 1;
  inline ::google::protobuf::int32 bits_valid_slots() const;
  inline void set_bits_valid_slots(::google::protobuf::int32 value);

  // optional int32 display_time = 2;
  inline bool has_display_time() const;
  inline void clear_display_time();
  static const int kDisplayTimeFieldNumber = 2;
  inline ::google::protobuf::int32 display_time() const;
  inline void set_display_time(::google::protobuf::int32 value);

  // optional string menu_string = 3;
  inline bool has_menu_string() const;
  inline void clear_menu_string();
  static const int kMenuStringFieldNumber = 3;
  inline const ::std::string& menu_string() const;
  inline void set_menu_string(const ::std::string& value);
  inline void set_menu_string(const char* value);
  inline void set_menu_string(const char* value, size_t size);
  inline ::std::string* mutable_menu_string();
  inline ::std::string* release_menu_string();
  inline void set_allocated_menu_string(::std::string* menu_string);

  // @@protoc_insertion_point(class_scope:CUsrMsg_ShowMenu)
 private:
  inline void set_has_bits_valid_slots();
  inline void clear_has_bits_valid_slots();
  inline void set_has_display_time();
  inline void clear_has_display_time();
  inline void set_has_menu_string();
  inline void clear_has_menu_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bits_valid_slots_;
  ::google::protobuf::int32 display_time_;
  ::std::string* menu_string_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_ShowMenu* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_GlowPropTurnOff : public ::google::protobuf::Message {
 public:
  CUsrMsg_GlowPropTurnOff();
  virtual ~CUsrMsg_GlowPropTurnOff();

  CUsrMsg_GlowPropTurnOff(const CUsrMsg_GlowPropTurnOff& from);

  inline CUsrMsg_GlowPropTurnOff& operator=(const CUsrMsg_GlowPropTurnOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_GlowPropTurnOff& default_instance();

  void Swap(CUsrMsg_GlowPropTurnOff* other);

  // implements Message ----------------------------------------------

  CUsrMsg_GlowPropTurnOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_GlowPropTurnOff& from);
  void MergeFrom(const CUsrMsg_GlowPropTurnOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entidx = 1;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_GlowPropTurnOff)
 private:
  inline void set_has_entidx();
  inline void clear_has_entidx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 entidx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_GlowPropTurnOff* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_BreakModel : public ::google::protobuf::Message {
 public:
  CUsrMsg_BreakModel();
  virtual ~CUsrMsg_BreakModel();

  CUsrMsg_BreakModel(const CUsrMsg_BreakModel& from);

  inline CUsrMsg_BreakModel& operator=(const CUsrMsg_BreakModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_BreakModel& default_instance();

  void Swap(CUsrMsg_BreakModel* other);

  // implements Message ----------------------------------------------

  CUsrMsg_BreakModel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_BreakModel& from);
  void MergeFrom(const CUsrMsg_BreakModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string break_msg = 1;
  inline bool has_break_msg() const;
  inline void clear_break_msg();
  static const int kBreakMsgFieldNumber = 1;
  inline const ::std::string& break_msg() const;
  inline void set_break_msg(const ::std::string& value);
  inline void set_break_msg(const char* value);
  inline void set_break_msg(const char* value, size_t size);
  inline ::std::string* mutable_break_msg();
  inline ::std::string* release_break_msg();
  inline void set_allocated_break_msg(::std::string* break_msg);

  // optional int32 model_id = 2;
  inline bool has_model_id() const;
  inline void clear_model_id();
  static const int kModelIdFieldNumber = 2;
  inline ::google::protobuf::int32 model_id() const;
  inline void set_model_id(::google::protobuf::int32 value);

  // optional .CMsgVector origin = 3;
  inline bool has_origin() const;
  inline void clear_origin();
  static const int kOriginFieldNumber = 3;
  inline const ::CMsgVector& origin() const;
  inline ::CMsgVector* mutable_origin();
  inline ::CMsgVector* release_origin();
  inline void set_allocated_origin(::CMsgVector* origin);

  // optional .CMsgQAngle angles = 4;
  inline bool has_angles() const;
  inline void clear_angles();
  static const int kAnglesFieldNumber = 4;
  inline const ::CMsgQAngle& angles() const;
  inline ::CMsgQAngle* mutable_angles();
  inline ::CMsgQAngle* release_angles();
  inline void set_allocated_angles(::CMsgQAngle* angles);

  // @@protoc_insertion_point(class_scope:CUsrMsg_BreakModel)
 private:
  inline void set_has_break_msg();
  inline void clear_has_break_msg();
  inline void set_has_model_id();
  inline void clear_has_model_id();
  inline void set_has_origin();
  inline void clear_has_origin();
  inline void set_has_angles();
  inline void clear_has_angles();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* break_msg_;
  ::CMsgVector* origin_;
  ::CMsgQAngle* angles_;
  ::google::protobuf::int32 model_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_BreakModel* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_Damage : public ::google::protobuf::Message {
 public:
  CUsrMsg_Damage();
  virtual ~CUsrMsg_Damage();

  CUsrMsg_Damage(const CUsrMsg_Damage& from);

  inline CUsrMsg_Damage& operator=(const CUsrMsg_Damage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_Damage& default_instance();

  void Swap(CUsrMsg_Damage* other);

  // implements Message ----------------------------------------------

  CUsrMsg_Damage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_Damage& from);
  void MergeFrom(const CUsrMsg_Damage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dmg_saved = 1;
  inline bool has_dmg_saved() const;
  inline void clear_dmg_saved();
  static const int kDmgSavedFieldNumber = 1;
  inline ::google::protobuf::int32 dmg_saved() const;
  inline void set_dmg_saved(::google::protobuf::int32 value);

  // optional int32 dmg_taken = 2;
  inline bool has_dmg_taken() const;
  inline void clear_dmg_taken();
  static const int kDmgTakenFieldNumber = 2;
  inline ::google::protobuf::int32 dmg_taken() const;
  inline void set_dmg_taken(::google::protobuf::int32 value);

  // optional int32 dmg_bits = 3;
  inline bool has_dmg_bits() const;
  inline void clear_dmg_bits();
  static const int kDmgBitsFieldNumber = 3;
  inline ::google::protobuf::int32 dmg_bits() const;
  inline void set_dmg_bits(::google::protobuf::int32 value);

  // optional .CMsgVector dmg_origin = 4;
  inline bool has_dmg_origin() const;
  inline void clear_dmg_origin();
  static const int kDmgOriginFieldNumber = 4;
  inline const ::CMsgVector& dmg_origin() const;
  inline ::CMsgVector* mutable_dmg_origin();
  inline ::CMsgVector* release_dmg_origin();
  inline void set_allocated_dmg_origin(::CMsgVector* dmg_origin);

  // @@protoc_insertion_point(class_scope:CUsrMsg_Damage)
 private:
  inline void set_has_dmg_saved();
  inline void clear_has_dmg_saved();
  inline void set_has_dmg_taken();
  inline void clear_has_dmg_taken();
  inline void set_has_dmg_bits();
  inline void clear_has_dmg_bits();
  inline void set_has_dmg_origin();
  inline void clear_has_dmg_origin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dmg_saved_;
  ::google::protobuf::int32 dmg_taken_;
  ::CMsgVector* dmg_origin_;
  ::google::protobuf::int32 dmg_bits_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_Damage* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_ExtVote_Option : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_ExtVote_Option();
  virtual ~CJBUsrMsg_ExtVote_Option();

  CJBUsrMsg_ExtVote_Option(const CJBUsrMsg_ExtVote_Option& from);

  inline CJBUsrMsg_ExtVote_Option& operator=(const CJBUsrMsg_ExtVote_Option& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_ExtVote_Option& default_instance();

  void Swap(CJBUsrMsg_ExtVote_Option* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_ExtVote_Option* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_ExtVote_Option& from);
  void MergeFrom(const CJBUsrMsg_ExtVote_Option& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional uint32 votes = 2;
  inline bool has_votes() const;
  inline void clear_votes();
  static const int kVotesFieldNumber = 2;
  inline ::google::protobuf::uint32 votes() const;
  inline void set_votes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_ExtVote_Option)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_votes();
  inline void clear_has_votes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;
  ::google::protobuf::uint32 votes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_ExtVote_Option* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_ExtVoteStateChange : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_ExtVoteStateChange();
  virtual ~CJBUsrMsg_ExtVoteStateChange();

  CJBUsrMsg_ExtVoteStateChange(const CJBUsrMsg_ExtVoteStateChange& from);

  inline CJBUsrMsg_ExtVoteStateChange& operator=(const CJBUsrMsg_ExtVoteStateChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_ExtVoteStateChange& default_instance();

  void Swap(CJBUsrMsg_ExtVoteStateChange* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_ExtVoteStateChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_ExtVoteStateChange& from);
  void MergeFrom(const CJBUsrMsg_ExtVoteStateChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional float time_offset = 2;
  inline bool has_time_offset() const;
  inline void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 2;
  inline float time_offset() const;
  inline void set_time_offset(float value);

  // repeated .CJBUsrMsg_ExtVote_Option options = 3;
  inline int options_size() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 3;
  inline const ::CJBUsrMsg_ExtVote_Option& options(int index) const;
  inline ::CJBUsrMsg_ExtVote_Option* mutable_options(int index);
  inline ::CJBUsrMsg_ExtVote_Option* add_options();
  inline const ::google::protobuf::RepeatedPtrField< ::CJBUsrMsg_ExtVote_Option >&
      options() const;
  inline ::google::protobuf::RepeatedPtrField< ::CJBUsrMsg_ExtVote_Option >*
      mutable_options();

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_ExtVoteStateChange)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time_offset();
  inline void clear_has_time_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 state_;
  float time_offset_;
  ::google::protobuf::RepeatedPtrField< ::CJBUsrMsg_ExtVote_Option > options_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_ExtVoteStateChange* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_ExtVoteUpdate : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_ExtVoteUpdate();
  virtual ~CJBUsrMsg_ExtVoteUpdate();

  CJBUsrMsg_ExtVoteUpdate(const CJBUsrMsg_ExtVoteUpdate& from);

  inline CJBUsrMsg_ExtVoteUpdate& operator=(const CJBUsrMsg_ExtVoteUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_ExtVoteUpdate& default_instance();

  void Swap(CJBUsrMsg_ExtVoteUpdate* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_ExtVoteUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_ExtVoteUpdate& from);
  void MergeFrom(const CJBUsrMsg_ExtVoteUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CJBUsrMsg_ExtVote_Option option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline const ::CJBUsrMsg_ExtVote_Option& option() const;
  inline ::CJBUsrMsg_ExtVote_Option* mutable_option();
  inline ::CJBUsrMsg_ExtVote_Option* release_option();
  inline void set_allocated_option(::CJBUsrMsg_ExtVote_Option* option);

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_ExtVoteUpdate)
 private:
  inline void set_has_option();
  inline void clear_has_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CJBUsrMsg_ExtVote_Option* option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_ExtVoteUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_ShowRoundIntro_CRoundIntroModel : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_ShowRoundIntro_CRoundIntroModel();
  virtual ~CJBUsrMsg_ShowRoundIntro_CRoundIntroModel();

  CJBUsrMsg_ShowRoundIntro_CRoundIntroModel(const CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& from);

  inline CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& operator=(const CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& default_instance();

  void Swap(CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& from);
  void MergeFrom(const CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string model_name = 1;
  inline bool has_model_name() const;
  inline void clear_model_name();
  static const int kModelNameFieldNumber = 1;
  inline const ::std::string& model_name() const;
  inline void set_model_name(const ::std::string& value);
  inline void set_model_name(const char* value);
  inline void set_model_name(const char* value, size_t size);
  inline ::std::string* mutable_model_name();
  inline ::std::string* release_model_name();
  inline void set_allocated_model_name(::std::string* model_name);

  // optional string anim_sequence = 2;
  inline bool has_anim_sequence() const;
  inline void clear_anim_sequence();
  static const int kAnimSequenceFieldNumber = 2;
  inline const ::std::string& anim_sequence() const;
  inline void set_anim_sequence(const ::std::string& value);
  inline void set_anim_sequence(const char* value);
  inline void set_anim_sequence(const char* value, size_t size);
  inline ::std::string* mutable_anim_sequence();
  inline ::std::string* release_anim_sequence();
  inline void set_allocated_anim_sequence(::std::string* anim_sequence);

  // optional string weapon_model = 3;
  inline bool has_weapon_model() const;
  inline void clear_weapon_model();
  static const int kWeaponModelFieldNumber = 3;
  inline const ::std::string& weapon_model() const;
  inline void set_weapon_model(const ::std::string& value);
  inline void set_weapon_model(const char* value);
  inline void set_weapon_model(const char* value, size_t size);
  inline ::std::string* mutable_weapon_model();
  inline ::std::string* release_weapon_model();
  inline void set_allocated_weapon_model(::std::string* weapon_model);

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_ShowRoundIntro.CRoundIntroModel)
 private:
  inline void set_has_model_name();
  inline void clear_has_model_name();
  inline void set_has_anim_sequence();
  inline void clear_has_anim_sequence();
  inline void set_has_weapon_model();
  inline void clear_has_weapon_model();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* model_name_;
  ::std::string* anim_sequence_;
  ::std::string* weapon_model_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_ShowRoundIntro : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_ShowRoundIntro();
  virtual ~CJBUsrMsg_ShowRoundIntro();

  CJBUsrMsg_ShowRoundIntro(const CJBUsrMsg_ShowRoundIntro& from);

  inline CJBUsrMsg_ShowRoundIntro& operator=(const CJBUsrMsg_ShowRoundIntro& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_ShowRoundIntro& default_instance();

  void Swap(CJBUsrMsg_ShowRoundIntro* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_ShowRoundIntro* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_ShowRoundIntro& from);
  void MergeFrom(const CJBUsrMsg_ShowRoundIntro& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CJBUsrMsg_ShowRoundIntro_CRoundIntroModel CRoundIntroModel;

  // accessors -------------------------------------------------------

  // optional int32 team_num = 1;
  inline bool has_team_num() const;
  inline void clear_team_num();
  static const int kTeamNumFieldNumber = 1;
  inline ::google::protobuf::int32 team_num() const;
  inline void set_team_num(::google::protobuf::int32 value);

  // optional string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional .CMsgRGBA text_color = 4;
  inline bool has_text_color() const;
  inline void clear_text_color();
  static const int kTextColorFieldNumber = 4;
  inline const ::CMsgRGBA& text_color() const;
  inline ::CMsgRGBA* mutable_text_color();
  inline ::CMsgRGBA* release_text_color();
  inline void set_allocated_text_color(::CMsgRGBA* text_color);

  // optional .CJBUsrMsg_ShowRoundIntro.CRoundIntroModel model1 = 5;
  inline bool has_model1() const;
  inline void clear_model1();
  static const int kModel1FieldNumber = 5;
  inline const ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& model1() const;
  inline ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* mutable_model1();
  inline ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* release_model1();
  inline void set_allocated_model1(::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* model1);

  // optional .CJBUsrMsg_ShowRoundIntro.CRoundIntroModel model2 = 6;
  inline bool has_model2() const;
  inline void clear_model2();
  static const int kModel2FieldNumber = 6;
  inline const ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& model2() const;
  inline ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* mutable_model2();
  inline ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* release_model2();
  inline void set_allocated_model2(::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* model2);

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_ShowRoundIntro)
 private:
  inline void set_has_team_num();
  inline void clear_has_team_num();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_text_color();
  inline void clear_has_text_color();
  inline void set_has_model1();
  inline void clear_has_model1();
  inline void set_has_model2();
  inline void clear_has_model2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* title_;
  ::std::string* description_;
  ::CMsgRGBA* text_color_;
  ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* model1_;
  ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* model2_;
  ::google::protobuf::int32 team_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_ShowRoundIntro* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_DeathNotice : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_DeathNotice();
  virtual ~CJBUsrMsg_DeathNotice();

  CJBUsrMsg_DeathNotice(const CJBUsrMsg_DeathNotice& from);

  inline CJBUsrMsg_DeathNotice& operator=(const CJBUsrMsg_DeathNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_DeathNotice& default_instance();

  void Swap(CJBUsrMsg_DeathNotice* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_DeathNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_DeathNotice& from);
  void MergeFrom(const CJBUsrMsg_DeathNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 victim_index = 1;
  inline bool has_victim_index() const;
  inline void clear_victim_index();
  static const int kVictimIndexFieldNumber = 1;
  inline ::google::protobuf::int32 victim_index() const;
  inline void set_victim_index(::google::protobuf::int32 value);

  // optional int32 scorer_index = 2;
  inline bool has_scorer_index() const;
  inline void clear_scorer_index();
  static const int kScorerIndexFieldNumber = 2;
  inline ::google::protobuf::int32 scorer_index() const;
  inline void set_scorer_index(::google::protobuf::int32 value);

  // optional int32 assister_index = 3;
  inline bool has_assister_index() const;
  inline void clear_assister_index();
  static const int kAssisterIndexFieldNumber = 3;
  inline ::google::protobuf::int32 assister_index() const;
  inline void set_assister_index(::google::protobuf::int32 value);

  // optional string killer_weapon = 4;
  inline bool has_killer_weapon() const;
  inline void clear_killer_weapon();
  static const int kKillerWeaponFieldNumber = 4;
  inline const ::std::string& killer_weapon() const;
  inline void set_killer_weapon(const ::std::string& value);
  inline void set_killer_weapon(const char* value);
  inline void set_killer_weapon(const char* value, size_t size);
  inline ::std::string* mutable_killer_weapon();
  inline ::std::string* release_killer_weapon();
  inline void set_allocated_killer_weapon(::std::string* killer_weapon);

  // optional int32 weapon_id = 5;
  inline bool has_weapon_id() const;
  inline void clear_weapon_id();
  static const int kWeaponIdFieldNumber = 5;
  inline ::google::protobuf::int32 weapon_id() const;
  inline void set_weapon_id(::google::protobuf::int32 value);

  // optional int32 damage_type = 6;
  inline bool has_damage_type() const;
  inline void clear_damage_type();
  static const int kDamageTypeFieldNumber = 6;
  inline ::google::protobuf::int32 damage_type() const;
  inline void set_damage_type(::google::protobuf::int32 value);

  // optional int32 custom_kill = 7;
  inline bool has_custom_kill() const;
  inline void clear_custom_kill();
  static const int kCustomKillFieldNumber = 7;
  inline ::google::protobuf::int32 custom_kill() const;
  inline void set_custom_kill(::google::protobuf::int32 value);

  // optional int32 body_group = 8;
  inline bool has_body_group() const;
  inline void clear_body_group();
  static const int kBodyGroupFieldNumber = 8;
  inline ::google::protobuf::int32 body_group() const;
  inline void set_body_group(::google::protobuf::int32 value);

  // optional bool credit_assister = 9;
  inline bool has_credit_assister() const;
  inline void clear_credit_assister();
  static const int kCreditAssisterFieldNumber = 9;
  inline bool credit_assister() const;
  inline void set_credit_assister(bool value);

  // optional int32 victim_teamnum = 10;
  inline bool has_victim_teamnum() const;
  inline void clear_victim_teamnum();
  static const int kVictimTeamnumFieldNumber = 10;
  inline ::google::protobuf::int32 victim_teamnum() const;
  inline void set_victim_teamnum(::google::protobuf::int32 value);

  // optional int32 killer_teamnum = 11;
  inline bool has_killer_teamnum() const;
  inline void clear_killer_teamnum();
  static const int kKillerTeamnumFieldNumber = 11;
  inline ::google::protobuf::int32 killer_teamnum() const;
  inline void set_killer_teamnum(::google::protobuf::int32 value);

  // optional int32 assister_teamnum = 12;
  inline bool has_assister_teamnum() const;
  inline void clear_assister_teamnum();
  static const int kAssisterTeamnumFieldNumber = 12;
  inline ::google::protobuf::int32 assister_teamnum() const;
  inline void set_assister_teamnum(::google::protobuf::int32 value);

  // optional string killer_cname = 13;
  inline bool has_killer_cname() const;
  inline void clear_killer_cname();
  static const int kKillerCnameFieldNumber = 13;
  inline const ::std::string& killer_cname() const;
  inline void set_killer_cname(const ::std::string& value);
  inline void set_killer_cname(const char* value);
  inline void set_killer_cname(const char* value, size_t size);
  inline ::std::string* mutable_killer_cname();
  inline ::std::string* release_killer_cname();
  inline void set_allocated_killer_cname(::std::string* killer_cname);

  // optional string assister_cname = 14;
  inline bool has_assister_cname() const;
  inline void clear_assister_cname();
  static const int kAssisterCnameFieldNumber = 14;
  inline const ::std::string& assister_cname() const;
  inline void set_assister_cname(const ::std::string& value);
  inline void set_assister_cname(const char* value);
  inline void set_assister_cname(const char* value, size_t size);
  inline ::std::string* mutable_assister_cname();
  inline ::std::string* release_assister_cname();
  inline void set_allocated_assister_cname(::std::string* assister_cname);

  // optional string victim_cname = 15;
  inline bool has_victim_cname() const;
  inline void clear_victim_cname();
  static const int kVictimCnameFieldNumber = 15;
  inline const ::std::string& victim_cname() const;
  inline void set_victim_cname(const ::std::string& value);
  inline void set_victim_cname(const char* value);
  inline void set_victim_cname(const char* value, size_t size);
  inline ::std::string* mutable_victim_cname();
  inline ::std::string* release_victim_cname();
  inline void set_allocated_victim_cname(::std::string* victim_cname);

  // optional int32 kill_streak = 16;
  inline bool has_kill_streak() const;
  inline void clear_kill_streak();
  static const int kKillStreakFieldNumber = 16;
  inline ::google::protobuf::int32 kill_streak() const;
  inline void set_kill_streak(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_DeathNotice)
 private:
  inline void set_has_victim_index();
  inline void clear_has_victim_index();
  inline void set_has_scorer_index();
  inline void clear_has_scorer_index();
  inline void set_has_assister_index();
  inline void clear_has_assister_index();
  inline void set_has_killer_weapon();
  inline void clear_has_killer_weapon();
  inline void set_has_weapon_id();
  inline void clear_has_weapon_id();
  inline void set_has_damage_type();
  inline void clear_has_damage_type();
  inline void set_has_custom_kill();
  inline void clear_has_custom_kill();
  inline void set_has_body_group();
  inline void clear_has_body_group();
  inline void set_has_credit_assister();
  inline void clear_has_credit_assister();
  inline void set_has_victim_teamnum();
  inline void clear_has_victim_teamnum();
  inline void set_has_killer_teamnum();
  inline void clear_has_killer_teamnum();
  inline void set_has_assister_teamnum();
  inline void clear_has_assister_teamnum();
  inline void set_has_killer_cname();
  inline void clear_has_killer_cname();
  inline void set_has_assister_cname();
  inline void clear_has_assister_cname();
  inline void set_has_victim_cname();
  inline void clear_has_victim_cname();
  inline void set_has_kill_streak();
  inline void clear_has_kill_streak();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 victim_index_;
  ::google::protobuf::int32 scorer_index_;
  ::std::string* killer_weapon_;
  ::google::protobuf::int32 assister_index_;
  ::google::protobuf::int32 weapon_id_;
  ::google::protobuf::int32 damage_type_;
  ::google::protobuf::int32 custom_kill_;
  ::google::protobuf::int32 body_group_;
  bool credit_assister_;
  ::google::protobuf::int32 victim_teamnum_;
  ::google::protobuf::int32 killer_teamnum_;
  ::std::string* killer_cname_;
  ::std::string* assister_cname_;
  ::google::protobuf::int32 assister_teamnum_;
  ::google::protobuf::int32 kill_streak_;
  ::std::string* victim_cname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_DeathNotice* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_PlayerSpree : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_PlayerSpree();
  virtual ~CJBUsrMsg_PlayerSpree();

  CJBUsrMsg_PlayerSpree(const CJBUsrMsg_PlayerSpree& from);

  inline CJBUsrMsg_PlayerSpree& operator=(const CJBUsrMsg_PlayerSpree& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_PlayerSpree& default_instance();

  void Swap(CJBUsrMsg_PlayerSpree* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_PlayerSpree* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_PlayerSpree& from);
  void MergeFrom(const CJBUsrMsg_PlayerSpree& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_index = 1;
  inline bool has_player_index() const;
  inline void clear_player_index();
  static const int kPlayerIndexFieldNumber = 1;
  inline ::google::protobuf::int32 player_index() const;
  inline void set_player_index(::google::protobuf::int32 value);

  // optional int32 streak = 2;
  inline bool has_streak() const;
  inline void clear_streak();
  static const int kStreakFieldNumber = 2;
  inline ::google::protobuf::int32 streak() const;
  inline void set_streak(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_PlayerSpree)
 private:
  inline void set_has_player_index();
  inline void clear_has_player_index();
  inline void set_has_streak();
  inline void clear_has_streak();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_index_;
  ::google::protobuf::int32 streak_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_PlayerSpree* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_SVTUpdate : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_SVTUpdate();
  virtual ~CJBUsrMsg_SVTUpdate();

  CJBUsrMsg_SVTUpdate(const CJBUsrMsg_SVTUpdate& from);

  inline CJBUsrMsg_SVTUpdate& operator=(const CJBUsrMsg_SVTUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_SVTUpdate& default_instance();

  void Swap(CJBUsrMsg_SVTUpdate* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_SVTUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_SVTUpdate& from);
  void MergeFrom(const CJBUsrMsg_SVTUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 alert_state = 1;
  inline bool has_alert_state() const;
  inline void clear_alert_state();
  static const int kAlertStateFieldNumber = 1;
  inline ::google::protobuf::int32 alert_state() const;
  inline void set_alert_state(::google::protobuf::int32 value);

  // optional float alert_time_remaining = 2;
  inline bool has_alert_time_remaining() const;
  inline void clear_alert_time_remaining();
  static const int kAlertTimeRemainingFieldNumber = 2;
  inline float alert_time_remaining() const;
  inline void set_alert_time_remaining(float value);

  // optional float alert_time_total = 3;
  inline bool has_alert_time_total() const;
  inline void clear_alert_time_total();
  static const int kAlertTimeTotalFieldNumber = 3;
  inline float alert_time_total() const;
  inline void set_alert_time_total(float value);

  // optional float last_alert_state_change = 4;
  inline bool has_last_alert_state_change() const;
  inline void clear_last_alert_state_change();
  static const int kLastAlertStateChangeFieldNumber = 4;
  inline float last_alert_state_change() const;
  inline void set_last_alert_state_change(float value);

  // optional float last_backup_dispatch = 5;
  inline bool has_last_backup_dispatch() const;
  inline void clear_last_backup_dispatch();
  static const int kLastBackupDispatchFieldNumber = 5;
  inline float last_backup_dispatch() const;
  inline void set_last_backup_dispatch(float value);

  // optional int32 terrorists_on_start = 6;
  inline bool has_terrorists_on_start() const;
  inline void clear_terrorists_on_start();
  static const int kTerroristsOnStartFieldNumber = 6;
  inline ::google::protobuf::int32 terrorists_on_start() const;
  inline void set_terrorists_on_start(::google::protobuf::int32 value);

  // optional int32 sneaks_on_start = 7;
  inline bool has_sneaks_on_start() const;
  inline void clear_sneaks_on_start();
  static const int kSneaksOnStartFieldNumber = 7;
  inline ::google::protobuf::int32 sneaks_on_start() const;
  inline void set_sneaks_on_start(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_SVTUpdate)
 private:
  inline void set_has_alert_state();
  inline void clear_has_alert_state();
  inline void set_has_alert_time_remaining();
  inline void clear_has_alert_time_remaining();
  inline void set_has_alert_time_total();
  inline void clear_has_alert_time_total();
  inline void set_has_last_alert_state_change();
  inline void clear_has_last_alert_state_change();
  inline void set_has_last_backup_dispatch();
  inline void clear_has_last_backup_dispatch();
  inline void set_has_terrorists_on_start();
  inline void clear_has_terrorists_on_start();
  inline void set_has_sneaks_on_start();
  inline void clear_has_sneaks_on_start();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 alert_state_;
  float alert_time_remaining_;
  float alert_time_total_;
  float last_alert_state_change_;
  float last_backup_dispatch_;
  ::google::protobuf::int32 terrorists_on_start_;
  ::google::protobuf::int32 sneaks_on_start_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_SVTUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CJBUsrMsg_Damage : public ::google::protobuf::Message {
 public:
  CJBUsrMsg_Damage();
  virtual ~CJBUsrMsg_Damage();

  CJBUsrMsg_Damage(const CJBUsrMsg_Damage& from);

  inline CJBUsrMsg_Damage& operator=(const CJBUsrMsg_Damage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJBUsrMsg_Damage& default_instance();

  void Swap(CJBUsrMsg_Damage* other);

  // implements Message ----------------------------------------------

  CJBUsrMsg_Damage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CJBUsrMsg_Damage& from);
  void MergeFrom(const CJBUsrMsg_Damage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 victim_id = 1;
  inline bool has_victim_id() const;
  inline void clear_victim_id();
  static const int kVictimIdFieldNumber = 1;
  inline ::google::protobuf::int32 victim_id() const;
  inline void set_victim_id(::google::protobuf::int32 value);

  // optional int32 attacker_id = 2;
  inline bool has_attacker_id() const;
  inline void clear_attacker_id();
  static const int kAttackerIdFieldNumber = 2;
  inline ::google::protobuf::int32 attacker_id() const;
  inline void set_attacker_id(::google::protobuf::int32 value);

  // optional float damage = 3;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 3;
  inline float damage() const;
  inline void set_damage(float value);

  // optional bool is_dead = 4;
  inline bool has_is_dead() const;
  inline void clear_is_dead();
  static const int kIsDeadFieldNumber = 4;
  inline bool is_dead() const;
  inline void set_is_dead(bool value);

  // optional bool is_combatant = 5;
  inline bool has_is_combatant() const;
  inline void clear_is_combatant();
  static const int kIsCombatantFieldNumber = 5;
  inline bool is_combatant() const;
  inline void set_is_combatant(bool value);

  // optional int32 dmg_bits = 6;
  inline bool has_dmg_bits() const;
  inline void clear_dmg_bits();
  static const int kDmgBitsFieldNumber = 6;
  inline ::google::protobuf::int32 dmg_bits() const;
  inline void set_dmg_bits(::google::protobuf::int32 value);

  // optional .CMsgVector dmg_origin = 7;
  inline bool has_dmg_origin() const;
  inline void clear_dmg_origin();
  static const int kDmgOriginFieldNumber = 7;
  inline const ::CMsgVector& dmg_origin() const;
  inline ::CMsgVector* mutable_dmg_origin();
  inline ::CMsgVector* release_dmg_origin();
  inline void set_allocated_dmg_origin(::CMsgVector* dmg_origin);

  // optional int32 dmg_custom = 8;
  inline bool has_dmg_custom() const;
  inline void clear_dmg_custom();
  static const int kDmgCustomFieldNumber = 8;
  inline ::google::protobuf::int32 dmg_custom() const;
  inline void set_dmg_custom(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CJBUsrMsg_Damage)
 private:
  inline void set_has_victim_id();
  inline void clear_has_victim_id();
  inline void set_has_attacker_id();
  inline void clear_has_attacker_id();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_is_dead();
  inline void clear_has_is_dead();
  inline void set_has_is_combatant();
  inline void clear_has_is_combatant();
  inline void set_has_dmg_bits();
  inline void clear_has_dmg_bits();
  inline void set_has_dmg_origin();
  inline void clear_has_dmg_origin();
  inline void set_has_dmg_custom();
  inline void clear_has_dmg_custom();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 victim_id_;
  ::google::protobuf::int32 attacker_id_;
  float damage_;
  bool is_dead_;
  bool is_combatant_;
  ::CMsgVector* dmg_origin_;
  ::google::protobuf::int32 dmg_bits_;
  ::google::protobuf::int32 dmg_custom_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CJBUsrMsg_Damage* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_ResetHud : public ::google::protobuf::Message {
 public:
  CUsrMsg_ResetHud();
  virtual ~CUsrMsg_ResetHud();

  CUsrMsg_ResetHud(const CUsrMsg_ResetHud& from);

  inline CUsrMsg_ResetHud& operator=(const CUsrMsg_ResetHud& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_ResetHud& default_instance();

  void Swap(CUsrMsg_ResetHud* other);

  // implements Message ----------------------------------------------

  CUsrMsg_ResetHud* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_ResetHud& from);
  void MergeFrom(const CUsrMsg_ResetHud& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reset = 1;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 1;
  inline bool reset() const;
  inline void set_reset(bool value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_ResetHud)
 private:
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool reset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_ResetHud* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_GameTitle : public ::google::protobuf::Message {
 public:
  CUsrMsg_GameTitle();
  virtual ~CUsrMsg_GameTitle();

  CUsrMsg_GameTitle(const CUsrMsg_GameTitle& from);

  inline CUsrMsg_GameTitle& operator=(const CUsrMsg_GameTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_GameTitle& default_instance();

  void Swap(CUsrMsg_GameTitle* other);

  // implements Message ----------------------------------------------

  CUsrMsg_GameTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_GameTitle& from);
  void MergeFrom(const CUsrMsg_GameTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_GameTitle)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_GameTitle* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_RequestState : public ::google::protobuf::Message {
 public:
  CUsrMsg_RequestState();
  virtual ~CUsrMsg_RequestState();

  CUsrMsg_RequestState(const CUsrMsg_RequestState& from);

  inline CUsrMsg_RequestState& operator=(const CUsrMsg_RequestState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_RequestState& default_instance();

  void Swap(CUsrMsg_RequestState* other);

  // implements Message ----------------------------------------------

  CUsrMsg_RequestState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_RequestState& from);
  void MergeFrom(const CUsrMsg_RequestState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_RequestState)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_RequestState* default_instance_;
};
// -------------------------------------------------------------------

class CUsrMsg_ClientInfo : public ::google::protobuf::Message {
 public:
  CUsrMsg_ClientInfo();
  virtual ~CUsrMsg_ClientInfo();

  CUsrMsg_ClientInfo(const CUsrMsg_ClientInfo& from);

  inline CUsrMsg_ClientInfo& operator=(const CUsrMsg_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CUsrMsg_ClientInfo& default_instance();

  void Swap(CUsrMsg_ClientInfo* other);

  // implements Message ----------------------------------------------

  CUsrMsg_ClientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUsrMsg_ClientInfo& from);
  void MergeFrom(const CUsrMsg_ClientInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUsrMsg_ClientInfo)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jb_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_jb_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_jb_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CUsrMsg_ClientInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// CUsrMsg_VGUIMenu_Subkey

// optional string name = 1;
inline bool CUsrMsg_VGUIMenu_Subkey::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_VGUIMenu_Subkey::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_VGUIMenu_Subkey::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_VGUIMenu_Subkey::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CUsrMsg_VGUIMenu_Subkey::name() const {
  return *name_;
}
inline void CUsrMsg_VGUIMenu_Subkey::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUsrMsg_VGUIMenu_Subkey::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUsrMsg_VGUIMenu_Subkey::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VGUIMenu_Subkey::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CUsrMsg_VGUIMenu_Subkey::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_VGUIMenu_Subkey::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string str = 2;
inline bool CUsrMsg_VGUIMenu_Subkey::has_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_VGUIMenu_Subkey::set_has_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_VGUIMenu_Subkey::clear_has_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_VGUIMenu_Subkey::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& CUsrMsg_VGUIMenu_Subkey::str() const {
  return *str_;
}
inline void CUsrMsg_VGUIMenu_Subkey::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void CUsrMsg_VGUIMenu_Subkey::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void CUsrMsg_VGUIMenu_Subkey::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VGUIMenu_Subkey::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* CUsrMsg_VGUIMenu_Subkey::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_VGUIMenu_Subkey::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CUsrMsg_VGUIMenu

// optional string name = 1;
inline bool CUsrMsg_VGUIMenu::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_VGUIMenu::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_VGUIMenu::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_VGUIMenu::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CUsrMsg_VGUIMenu::name() const {
  return *name_;
}
inline void CUsrMsg_VGUIMenu::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUsrMsg_VGUIMenu::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUsrMsg_VGUIMenu::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VGUIMenu::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CUsrMsg_VGUIMenu::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_VGUIMenu::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool show = 2;
inline bool CUsrMsg_VGUIMenu::has_show() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_VGUIMenu::set_has_show() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_VGUIMenu::clear_has_show() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_VGUIMenu::clear_show() {
  show_ = false;
  clear_has_show();
}
inline bool CUsrMsg_VGUIMenu::show() const {
  return show_;
}
inline void CUsrMsg_VGUIMenu::set_show(bool value) {
  set_has_show();
  show_ = value;
}

// repeated .CUsrMsg_VGUIMenu.Subkey subkeys = 3;
inline int CUsrMsg_VGUIMenu::subkeys_size() const {
  return subkeys_.size();
}
inline void CUsrMsg_VGUIMenu::clear_subkeys() {
  subkeys_.Clear();
}
inline const ::CUsrMsg_VGUIMenu_Subkey& CUsrMsg_VGUIMenu::subkeys(int index) const {
  return subkeys_.Get(index);
}
inline ::CUsrMsg_VGUIMenu_Subkey* CUsrMsg_VGUIMenu::mutable_subkeys(int index) {
  return subkeys_.Mutable(index);
}
inline ::CUsrMsg_VGUIMenu_Subkey* CUsrMsg_VGUIMenu::add_subkeys() {
  return subkeys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VGUIMenu_Subkey >&
CUsrMsg_VGUIMenu::subkeys() const {
  return subkeys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VGUIMenu_Subkey >*
CUsrMsg_VGUIMenu::mutable_subkeys() {
  return &subkeys_;
}

// -------------------------------------------------------------------

// CUsrMsg_Geiger

// optional int32 range = 1;
inline bool CUsrMsg_Geiger::has_range() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_Geiger::set_has_range() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_Geiger::clear_has_range() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_Geiger::clear_range() {
  range_ = 0;
  clear_has_range();
}
inline ::google::protobuf::int32 CUsrMsg_Geiger::range() const {
  return range_;
}
inline void CUsrMsg_Geiger::set_range(::google::protobuf::int32 value) {
  set_has_range();
  range_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_Train

// optional int32 train = 1;
inline bool CUsrMsg_Train::has_train() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_Train::set_has_train() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_Train::clear_has_train() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_Train::clear_train() {
  train_ = 0;
  clear_has_train();
}
inline ::google::protobuf::int32 CUsrMsg_Train::train() const {
  return train_;
}
inline void CUsrMsg_Train::set_train(::google::protobuf::int32 value) {
  set_has_train();
  train_ = value;
}

// optional int32 train_side = 2;
inline bool CUsrMsg_Train::has_train_side() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_Train::set_has_train_side() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_Train::clear_has_train_side() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_Train::clear_train_side() {
  train_side_ = 0;
  clear_has_train_side();
}
inline ::google::protobuf::int32 CUsrMsg_Train::train_side() const {
  return train_side_;
}
inline void CUsrMsg_Train::set_train_side(::google::protobuf::int32 value) {
  set_has_train_side();
  train_side_ = value;
}

// optional bool is_active = 3;
inline bool CUsrMsg_Train::has_is_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_Train::set_has_is_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_Train::clear_has_is_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_Train::clear_is_active() {
  is_active_ = false;
  clear_has_is_active();
}
inline bool CUsrMsg_Train::is_active() const {
  return is_active_;
}
inline void CUsrMsg_Train::set_is_active(bool value) {
  set_has_is_active();
  is_active_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_HudText

// optional string text = 1;
inline bool CUsrMsg_HudText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_HudText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_HudText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_HudText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CUsrMsg_HudText::text() const {
  return *text_;
}
inline void CUsrMsg_HudText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUsrMsg_HudText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUsrMsg_HudText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_HudText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CUsrMsg_HudText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_HudText::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CUsrMsg_SayText

// optional int32 ent_idx = 1;
inline bool CUsrMsg_SayText::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_SayText::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_SayText::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_SayText::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CUsrMsg_SayText::ent_idx() const {
  return ent_idx_;
}
inline void CUsrMsg_SayText::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
}

// optional string text = 2;
inline bool CUsrMsg_SayText::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_SayText::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_SayText::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_SayText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CUsrMsg_SayText::text() const {
  return *text_;
}
inline void CUsrMsg_SayText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUsrMsg_SayText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUsrMsg_SayText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_SayText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CUsrMsg_SayText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_SayText::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool chat = 3;
inline bool CUsrMsg_SayText::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_SayText::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_SayText::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_SayText::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
inline bool CUsrMsg_SayText::chat() const {
  return chat_;
}
inline void CUsrMsg_SayText::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
}

// optional bool textallchat = 4;
inline bool CUsrMsg_SayText::has_textallchat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_SayText::set_has_textallchat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_SayText::clear_has_textallchat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_SayText::clear_textallchat() {
  textallchat_ = false;
  clear_has_textallchat();
}
inline bool CUsrMsg_SayText::textallchat() const {
  return textallchat_;
}
inline void CUsrMsg_SayText::set_textallchat(bool value) {
  set_has_textallchat();
  textallchat_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_SayText2

// optional int32 ent_idx = 1;
inline bool CUsrMsg_SayText2::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_SayText2::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_SayText2::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_SayText2::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CUsrMsg_SayText2::ent_idx() const {
  return ent_idx_;
}
inline void CUsrMsg_SayText2::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
}

// optional bool chat = 2;
inline bool CUsrMsg_SayText2::has_chat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_SayText2::set_has_chat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_SayText2::clear_has_chat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_SayText2::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
inline bool CUsrMsg_SayText2::chat() const {
  return chat_;
}
inline void CUsrMsg_SayText2::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
}

// optional string msg_name = 3;
inline bool CUsrMsg_SayText2::has_msg_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_SayText2::set_has_msg_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_SayText2::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_SayText2::clear_msg_name() {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    msg_name_->clear();
  }
  clear_has_msg_name();
}
inline const ::std::string& CUsrMsg_SayText2::msg_name() const {
  return *msg_name_;
}
inline void CUsrMsg_SayText2::set_msg_name(const ::std::string& value) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CUsrMsg_SayText2::set_msg_name(const char* value) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CUsrMsg_SayText2::set_msg_name(const char* value, size_t size) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_SayText2::mutable_msg_name() {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  return msg_name_;
}
inline ::std::string* CUsrMsg_SayText2::release_msg_name() {
  clear_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_name_;
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_SayText2::set_allocated_msg_name(::std::string* msg_name) {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_name_;
  }
  if (msg_name) {
    set_has_msg_name();
    msg_name_ = msg_name;
  } else {
    clear_has_msg_name();
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string params = 4;
inline int CUsrMsg_SayText2::params_size() const {
  return params_.size();
}
inline void CUsrMsg_SayText2::clear_params() {
  params_.Clear();
}
inline const ::std::string& CUsrMsg_SayText2::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* CUsrMsg_SayText2::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void CUsrMsg_SayText2::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void CUsrMsg_SayText2::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void CUsrMsg_SayText2::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_SayText2::add_params() {
  return params_.Add();
}
inline void CUsrMsg_SayText2::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void CUsrMsg_SayText2::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void CUsrMsg_SayText2::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CUsrMsg_SayText2::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CUsrMsg_SayText2::mutable_params() {
  return &params_;
}

// optional bool textallchat = 5;
inline bool CUsrMsg_SayText2::has_textallchat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUsrMsg_SayText2::set_has_textallchat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CUsrMsg_SayText2::clear_has_textallchat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CUsrMsg_SayText2::clear_textallchat() {
  textallchat_ = false;
  clear_has_textallchat();
}
inline bool CUsrMsg_SayText2::textallchat() const {
  return textallchat_;
}
inline void CUsrMsg_SayText2::set_textallchat(bool value) {
  set_has_textallchat();
  textallchat_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_TextMsg

// optional int32 msg_dst = 1;
inline bool CUsrMsg_TextMsg::has_msg_dst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_TextMsg::set_has_msg_dst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_TextMsg::clear_has_msg_dst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_TextMsg::clear_msg_dst() {
  msg_dst_ = 0;
  clear_has_msg_dst();
}
inline ::google::protobuf::int32 CUsrMsg_TextMsg::msg_dst() const {
  return msg_dst_;
}
inline void CUsrMsg_TextMsg::set_msg_dst(::google::protobuf::int32 value) {
  set_has_msg_dst();
  msg_dst_ = value;
}

// repeated string params = 3;
inline int CUsrMsg_TextMsg::params_size() const {
  return params_.size();
}
inline void CUsrMsg_TextMsg::clear_params() {
  params_.Clear();
}
inline const ::std::string& CUsrMsg_TextMsg::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* CUsrMsg_TextMsg::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void CUsrMsg_TextMsg::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void CUsrMsg_TextMsg::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void CUsrMsg_TextMsg::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_TextMsg::add_params() {
  return params_.Add();
}
inline void CUsrMsg_TextMsg::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void CUsrMsg_TextMsg::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void CUsrMsg_TextMsg::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CUsrMsg_TextMsg::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CUsrMsg_TextMsg::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// CUsrMsg_HudMsg

// optional int32 channel = 1;
inline bool CUsrMsg_HudMsg::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_HudMsg::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_HudMsg::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 CUsrMsg_HudMsg::channel() const {
  return channel_;
}
inline void CUsrMsg_HudMsg::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional .CMsgVector2D pos = 2;
inline bool CUsrMsg_HudMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_HudMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_HudMsg::clear_pos() {
  if (pos_ != NULL) pos_->::CMsgVector2D::Clear();
  clear_has_pos();
}
inline const ::CMsgVector2D& CUsrMsg_HudMsg::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::CMsgVector2D* CUsrMsg_HudMsg::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::CMsgVector2D;
  return pos_;
}
inline ::CMsgVector2D* CUsrMsg_HudMsg::release_pos() {
  clear_has_pos();
  ::CMsgVector2D* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CUsrMsg_HudMsg::set_allocated_pos(::CMsgVector2D* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional .CMsgRGBA clr1 = 3;
inline bool CUsrMsg_HudMsg::has_clr1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_clr1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_HudMsg::clear_has_clr1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_HudMsg::clear_clr1() {
  if (clr1_ != NULL) clr1_->::CMsgRGBA::Clear();
  clear_has_clr1();
}
inline const ::CMsgRGBA& CUsrMsg_HudMsg::clr1() const {
  return clr1_ != NULL ? *clr1_ : *default_instance_->clr1_;
}
inline ::CMsgRGBA* CUsrMsg_HudMsg::mutable_clr1() {
  set_has_clr1();
  if (clr1_ == NULL) clr1_ = new ::CMsgRGBA;
  return clr1_;
}
inline ::CMsgRGBA* CUsrMsg_HudMsg::release_clr1() {
  clear_has_clr1();
  ::CMsgRGBA* temp = clr1_;
  clr1_ = NULL;
  return temp;
}
inline void CUsrMsg_HudMsg::set_allocated_clr1(::CMsgRGBA* clr1) {
  delete clr1_;
  clr1_ = clr1;
  if (clr1) {
    set_has_clr1();
  } else {
    clear_has_clr1();
  }
}

// optional .CMsgRGBA clr2 = 4;
inline bool CUsrMsg_HudMsg::has_clr2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_clr2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_HudMsg::clear_has_clr2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_HudMsg::clear_clr2() {
  if (clr2_ != NULL) clr2_->::CMsgRGBA::Clear();
  clear_has_clr2();
}
inline const ::CMsgRGBA& CUsrMsg_HudMsg::clr2() const {
  return clr2_ != NULL ? *clr2_ : *default_instance_->clr2_;
}
inline ::CMsgRGBA* CUsrMsg_HudMsg::mutable_clr2() {
  set_has_clr2();
  if (clr2_ == NULL) clr2_ = new ::CMsgRGBA;
  return clr2_;
}
inline ::CMsgRGBA* CUsrMsg_HudMsg::release_clr2() {
  clear_has_clr2();
  ::CMsgRGBA* temp = clr2_;
  clr2_ = NULL;
  return temp;
}
inline void CUsrMsg_HudMsg::set_allocated_clr2(::CMsgRGBA* clr2) {
  delete clr2_;
  clr2_ = clr2;
  if (clr2) {
    set_has_clr2();
  } else {
    clear_has_clr2();
  }
}

// optional int32 effect = 5;
inline bool CUsrMsg_HudMsg::has_effect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_effect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CUsrMsg_HudMsg::clear_has_effect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CUsrMsg_HudMsg::clear_effect() {
  effect_ = 0;
  clear_has_effect();
}
inline ::google::protobuf::int32 CUsrMsg_HudMsg::effect() const {
  return effect_;
}
inline void CUsrMsg_HudMsg::set_effect(::google::protobuf::int32 value) {
  set_has_effect();
  effect_ = value;
}

// optional float fade_in_time = 6;
inline bool CUsrMsg_HudMsg::has_fade_in_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_fade_in_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CUsrMsg_HudMsg::clear_has_fade_in_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CUsrMsg_HudMsg::clear_fade_in_time() {
  fade_in_time_ = 0;
  clear_has_fade_in_time();
}
inline float CUsrMsg_HudMsg::fade_in_time() const {
  return fade_in_time_;
}
inline void CUsrMsg_HudMsg::set_fade_in_time(float value) {
  set_has_fade_in_time();
  fade_in_time_ = value;
}

// optional float fade_out_time = 7;
inline bool CUsrMsg_HudMsg::has_fade_out_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_fade_out_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CUsrMsg_HudMsg::clear_has_fade_out_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CUsrMsg_HudMsg::clear_fade_out_time() {
  fade_out_time_ = 0;
  clear_has_fade_out_time();
}
inline float CUsrMsg_HudMsg::fade_out_time() const {
  return fade_out_time_;
}
inline void CUsrMsg_HudMsg::set_fade_out_time(float value) {
  set_has_fade_out_time();
  fade_out_time_ = value;
}

// optional float hold_time = 9;
inline bool CUsrMsg_HudMsg::has_hold_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_hold_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CUsrMsg_HudMsg::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CUsrMsg_HudMsg::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
inline float CUsrMsg_HudMsg::hold_time() const {
  return hold_time_;
}
inline void CUsrMsg_HudMsg::set_hold_time(float value) {
  set_has_hold_time();
  hold_time_ = value;
}

// optional float fx_time = 10;
inline bool CUsrMsg_HudMsg::has_fx_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_fx_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CUsrMsg_HudMsg::clear_has_fx_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CUsrMsg_HudMsg::clear_fx_time() {
  fx_time_ = 0;
  clear_has_fx_time();
}
inline float CUsrMsg_HudMsg::fx_time() const {
  return fx_time_;
}
inline void CUsrMsg_HudMsg::set_fx_time(float value) {
  set_has_fx_time();
  fx_time_ = value;
}

// optional string text = 11;
inline bool CUsrMsg_HudMsg::has_text() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CUsrMsg_HudMsg::set_has_text() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CUsrMsg_HudMsg::clear_has_text() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CUsrMsg_HudMsg::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CUsrMsg_HudMsg::text() const {
  return *text_;
}
inline void CUsrMsg_HudMsg::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUsrMsg_HudMsg::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUsrMsg_HudMsg::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_HudMsg::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CUsrMsg_HudMsg::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_HudMsg::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CUsrMsg_Shake

// optional int32 command = 1;
inline bool CUsrMsg_Shake::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_Shake::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_Shake::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_Shake::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::google::protobuf::int32 CUsrMsg_Shake::command() const {
  return command_;
}
inline void CUsrMsg_Shake::set_command(::google::protobuf::int32 value) {
  set_has_command();
  command_ = value;
}

// optional float local_amplitude = 2;
inline bool CUsrMsg_Shake::has_local_amplitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_Shake::set_has_local_amplitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_Shake::clear_has_local_amplitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_Shake::clear_local_amplitude() {
  local_amplitude_ = 0;
  clear_has_local_amplitude();
}
inline float CUsrMsg_Shake::local_amplitude() const {
  return local_amplitude_;
}
inline void CUsrMsg_Shake::set_local_amplitude(float value) {
  set_has_local_amplitude();
  local_amplitude_ = value;
}

// optional float frequency = 3;
inline bool CUsrMsg_Shake::has_frequency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_Shake::set_has_frequency() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_Shake::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_Shake::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
inline float CUsrMsg_Shake::frequency() const {
  return frequency_;
}
inline void CUsrMsg_Shake::set_frequency(float value) {
  set_has_frequency();
  frequency_ = value;
}

// optional float duration = 4;
inline bool CUsrMsg_Shake::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_Shake::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_Shake::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_Shake::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CUsrMsg_Shake::duration() const {
  return duration_;
}
inline void CUsrMsg_Shake::set_duration(float value) {
  set_has_duration();
  duration_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_Fade

// optional int32 duration = 1;
inline bool CUsrMsg_Fade::has_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_Fade::set_has_duration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_Fade::clear_has_duration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_Fade::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CUsrMsg_Fade::duration() const {
  return duration_;
}
inline void CUsrMsg_Fade::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// optional int32 hold_time = 2;
inline bool CUsrMsg_Fade::has_hold_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_Fade::set_has_hold_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_Fade::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_Fade::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
inline ::google::protobuf::int32 CUsrMsg_Fade::hold_time() const {
  return hold_time_;
}
inline void CUsrMsg_Fade::set_hold_time(::google::protobuf::int32 value) {
  set_has_hold_time();
  hold_time_ = value;
}

// optional int32 flags = 3;
inline bool CUsrMsg_Fade::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_Fade::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_Fade::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_Fade::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CUsrMsg_Fade::flags() const {
  return flags_;
}
inline void CUsrMsg_Fade::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
}

// optional .CMsgRGBA clr = 4;
inline bool CUsrMsg_Fade::has_clr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_Fade::set_has_clr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_Fade::clear_has_clr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_Fade::clear_clr() {
  if (clr_ != NULL) clr_->::CMsgRGBA::Clear();
  clear_has_clr();
}
inline const ::CMsgRGBA& CUsrMsg_Fade::clr() const {
  return clr_ != NULL ? *clr_ : *default_instance_->clr_;
}
inline ::CMsgRGBA* CUsrMsg_Fade::mutable_clr() {
  set_has_clr();
  if (clr_ == NULL) clr_ = new ::CMsgRGBA;
  return clr_;
}
inline ::CMsgRGBA* CUsrMsg_Fade::release_clr() {
  clear_has_clr();
  ::CMsgRGBA* temp = clr_;
  clr_ = NULL;
  return temp;
}
inline void CUsrMsg_Fade::set_allocated_clr(::CMsgRGBA* clr) {
  delete clr_;
  clr_ = clr;
  if (clr) {
    set_has_clr();
  } else {
    clear_has_clr();
  }
}

// -------------------------------------------------------------------

// CUsrMsg_Rumble

// optional int32 index = 1;
inline bool CUsrMsg_Rumble::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_Rumble::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_Rumble::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_Rumble::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CUsrMsg_Rumble::index() const {
  return index_;
}
inline void CUsrMsg_Rumble::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 data = 2;
inline bool CUsrMsg_Rumble::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_Rumble::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_Rumble::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_Rumble::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline ::google::protobuf::int32 CUsrMsg_Rumble::data() const {
  return data_;
}
inline void CUsrMsg_Rumble::set_data(::google::protobuf::int32 value) {
  set_has_data();
  data_ = value;
}

// optional int32 flags = 3;
inline bool CUsrMsg_Rumble::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_Rumble::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_Rumble::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_Rumble::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CUsrMsg_Rumble::flags() const {
  return flags_;
}
inline void CUsrMsg_Rumble::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_CloseCaption

// optional uint32 hash = 1;
inline bool CUsrMsg_CloseCaption::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_CloseCaption::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_CloseCaption::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_CloseCaption::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
inline ::google::protobuf::uint32 CUsrMsg_CloseCaption::hash() const {
  return hash_;
}
inline void CUsrMsg_CloseCaption::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
}

// optional int32 duration = 2;
inline bool CUsrMsg_CloseCaption::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_CloseCaption::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_CloseCaption::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_CloseCaption::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CUsrMsg_CloseCaption::duration() const {
  return duration_;
}
inline void CUsrMsg_CloseCaption::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// optional bool from_player = 3;
inline bool CUsrMsg_CloseCaption::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_CloseCaption::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_CloseCaption::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_CloseCaption::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
inline bool CUsrMsg_CloseCaption::from_player() const {
  return from_player_;
}
inline void CUsrMsg_CloseCaption::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_CloseCaptionDirect

// optional uint32 hash = 1;
inline bool CUsrMsg_CloseCaptionDirect::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_CloseCaptionDirect::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_CloseCaptionDirect::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_CloseCaptionDirect::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
inline ::google::protobuf::uint32 CUsrMsg_CloseCaptionDirect::hash() const {
  return hash_;
}
inline void CUsrMsg_CloseCaptionDirect::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
}

// optional int32 duration = 2;
inline bool CUsrMsg_CloseCaptionDirect::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_CloseCaptionDirect::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_CloseCaptionDirect::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_CloseCaptionDirect::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CUsrMsg_CloseCaptionDirect::duration() const {
  return duration_;
}
inline void CUsrMsg_CloseCaptionDirect::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// optional bool from_player = 3;
inline bool CUsrMsg_CloseCaptionDirect::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_CloseCaptionDirect::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_CloseCaptionDirect::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_CloseCaptionDirect::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
inline bool CUsrMsg_CloseCaptionDirect::from_player() const {
  return from_player_;
}
inline void CUsrMsg_CloseCaptionDirect::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_VoiceMask_PlayerMask

// optional int32 game_rules_mask = 1;
inline bool CUsrMsg_VoiceMask_PlayerMask::has_game_rules_mask() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_VoiceMask_PlayerMask::set_has_game_rules_mask() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_VoiceMask_PlayerMask::clear_has_game_rules_mask() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_VoiceMask_PlayerMask::clear_game_rules_mask() {
  game_rules_mask_ = 0;
  clear_has_game_rules_mask();
}
inline ::google::protobuf::int32 CUsrMsg_VoiceMask_PlayerMask::game_rules_mask() const {
  return game_rules_mask_;
}
inline void CUsrMsg_VoiceMask_PlayerMask::set_game_rules_mask(::google::protobuf::int32 value) {
  set_has_game_rules_mask();
  game_rules_mask_ = value;
}

// optional int32 ban_masks = 2;
inline bool CUsrMsg_VoiceMask_PlayerMask::has_ban_masks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_VoiceMask_PlayerMask::set_has_ban_masks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_VoiceMask_PlayerMask::clear_has_ban_masks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_VoiceMask_PlayerMask::clear_ban_masks() {
  ban_masks_ = 0;
  clear_has_ban_masks();
}
inline ::google::protobuf::int32 CUsrMsg_VoiceMask_PlayerMask::ban_masks() const {
  return ban_masks_;
}
inline void CUsrMsg_VoiceMask_PlayerMask::set_ban_masks(::google::protobuf::int32 value) {
  set_has_ban_masks();
  ban_masks_ = value;
}

// optional int32 proximity_mask = 3;
inline bool CUsrMsg_VoiceMask_PlayerMask::has_proximity_mask() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_VoiceMask_PlayerMask::set_has_proximity_mask() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_VoiceMask_PlayerMask::clear_has_proximity_mask() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_VoiceMask_PlayerMask::clear_proximity_mask() {
  proximity_mask_ = 0;
  clear_has_proximity_mask();
}
inline ::google::protobuf::int32 CUsrMsg_VoiceMask_PlayerMask::proximity_mask() const {
  return proximity_mask_;
}
inline void CUsrMsg_VoiceMask_PlayerMask::set_proximity_mask(::google::protobuf::int32 value) {
  set_has_proximity_mask();
  proximity_mask_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_VoiceMask

// repeated .CUsrMsg_VoiceMask.PlayerMask player_masks = 1;
inline int CUsrMsg_VoiceMask::player_masks_size() const {
  return player_masks_.size();
}
inline void CUsrMsg_VoiceMask::clear_player_masks() {
  player_masks_.Clear();
}
inline const ::CUsrMsg_VoiceMask_PlayerMask& CUsrMsg_VoiceMask::player_masks(int index) const {
  return player_masks_.Get(index);
}
inline ::CUsrMsg_VoiceMask_PlayerMask* CUsrMsg_VoiceMask::mutable_player_masks(int index) {
  return player_masks_.Mutable(index);
}
inline ::CUsrMsg_VoiceMask_PlayerMask* CUsrMsg_VoiceMask::add_player_masks() {
  return player_masks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VoiceMask_PlayerMask >&
CUsrMsg_VoiceMask::player_masks() const {
  return player_masks_;
}
inline ::google::protobuf::RepeatedPtrField< ::CUsrMsg_VoiceMask_PlayerMask >*
CUsrMsg_VoiceMask::mutable_player_masks() {
  return &player_masks_;
}

// optional bool player_mod_enable = 2;
inline bool CUsrMsg_VoiceMask::has_player_mod_enable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_VoiceMask::set_has_player_mod_enable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_VoiceMask::clear_has_player_mod_enable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_VoiceMask::clear_player_mod_enable() {
  player_mod_enable_ = false;
  clear_has_player_mod_enable();
}
inline bool CUsrMsg_VoiceMask::player_mod_enable() const {
  return player_mod_enable_;
}
inline void CUsrMsg_VoiceMask::set_player_mod_enable(bool value) {
  set_has_player_mod_enable();
  player_mod_enable_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_HintText

// optional string text = 1;
inline bool CUsrMsg_HintText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_HintText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_HintText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_HintText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CUsrMsg_HintText::text() const {
  return *text_;
}
inline void CUsrMsg_HintText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUsrMsg_HintText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUsrMsg_HintText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_HintText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CUsrMsg_HintText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_HintText::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CUsrMsg_KeyHintText

// repeated string hints = 1;
inline int CUsrMsg_KeyHintText::hints_size() const {
  return hints_.size();
}
inline void CUsrMsg_KeyHintText::clear_hints() {
  hints_.Clear();
}
inline const ::std::string& CUsrMsg_KeyHintText::hints(int index) const {
  return hints_.Get(index);
}
inline ::std::string* CUsrMsg_KeyHintText::mutable_hints(int index) {
  return hints_.Mutable(index);
}
inline void CUsrMsg_KeyHintText::set_hints(int index, const ::std::string& value) {
  hints_.Mutable(index)->assign(value);
}
inline void CUsrMsg_KeyHintText::set_hints(int index, const char* value) {
  hints_.Mutable(index)->assign(value);
}
inline void CUsrMsg_KeyHintText::set_hints(int index, const char* value, size_t size) {
  hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_KeyHintText::add_hints() {
  return hints_.Add();
}
inline void CUsrMsg_KeyHintText::add_hints(const ::std::string& value) {
  hints_.Add()->assign(value);
}
inline void CUsrMsg_KeyHintText::add_hints(const char* value) {
  hints_.Add()->assign(value);
}
inline void CUsrMsg_KeyHintText::add_hints(const char* value, size_t size) {
  hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CUsrMsg_KeyHintText::hints() const {
  return hints_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CUsrMsg_KeyHintText::mutable_hints() {
  return &hints_;
}

// -------------------------------------------------------------------

// CUsrMsg_DesiredTimescale

// optional float desired_timescale = 1;
inline bool CUsrMsg_DesiredTimescale::has_desired_timescale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_DesiredTimescale::set_has_desired_timescale() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_DesiredTimescale::clear_has_desired_timescale() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_DesiredTimescale::clear_desired_timescale() {
  desired_timescale_ = 0;
  clear_has_desired_timescale();
}
inline float CUsrMsg_DesiredTimescale::desired_timescale() const {
  return desired_timescale_;
}
inline void CUsrMsg_DesiredTimescale::set_desired_timescale(float value) {
  set_has_desired_timescale();
  desired_timescale_ = value;
}

// optional float duration_realtime_sec = 2;
inline bool CUsrMsg_DesiredTimescale::has_duration_realtime_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_DesiredTimescale::set_has_duration_realtime_sec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_DesiredTimescale::clear_has_duration_realtime_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_DesiredTimescale::clear_duration_realtime_sec() {
  duration_realtime_sec_ = 0;
  clear_has_duration_realtime_sec();
}
inline float CUsrMsg_DesiredTimescale::duration_realtime_sec() const {
  return duration_realtime_sec_;
}
inline void CUsrMsg_DesiredTimescale::set_duration_realtime_sec(float value) {
  set_has_duration_realtime_sec();
  duration_realtime_sec_ = value;
}

// optional int32 interpolator_type = 3;
inline bool CUsrMsg_DesiredTimescale::has_interpolator_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_DesiredTimescale::set_has_interpolator_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_DesiredTimescale::clear_has_interpolator_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_DesiredTimescale::clear_interpolator_type() {
  interpolator_type_ = 0;
  clear_has_interpolator_type();
}
inline ::google::protobuf::int32 CUsrMsg_DesiredTimescale::interpolator_type() const {
  return interpolator_type_;
}
inline void CUsrMsg_DesiredTimescale::set_interpolator_type(::google::protobuf::int32 value) {
  set_has_interpolator_type();
  interpolator_type_ = value;
}

// optional float start_blend_time = 4;
inline bool CUsrMsg_DesiredTimescale::has_start_blend_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_DesiredTimescale::set_has_start_blend_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_DesiredTimescale::clear_has_start_blend_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_DesiredTimescale::clear_start_blend_time() {
  start_blend_time_ = 0;
  clear_has_start_blend_time();
}
inline float CUsrMsg_DesiredTimescale::start_blend_time() const {
  return start_blend_time_;
}
inline void CUsrMsg_DesiredTimescale::set_start_blend_time(float value) {
  set_has_start_blend_time();
  start_blend_time_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_CurrentTimescale

// optional float cur_timescale = 1;
inline bool CUsrMsg_CurrentTimescale::has_cur_timescale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_CurrentTimescale::set_has_cur_timescale() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_CurrentTimescale::clear_has_cur_timescale() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_CurrentTimescale::clear_cur_timescale() {
  cur_timescale_ = 0;
  clear_has_cur_timescale();
}
inline float CUsrMsg_CurrentTimescale::cur_timescale() const {
  return cur_timescale_;
}
inline void CUsrMsg_CurrentTimescale::set_cur_timescale(float value) {
  set_has_cur_timescale();
  cur_timescale_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_AchievementEvent

// optional int32 achievement = 1;
inline bool CUsrMsg_AchievementEvent::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_AchievementEvent::set_has_achievement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_AchievementEvent::clear_has_achievement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_AchievementEvent::clear_achievement() {
  achievement_ = 0;
  clear_has_achievement();
}
inline ::google::protobuf::int32 CUsrMsg_AchievementEvent::achievement() const {
  return achievement_;
}
inline void CUsrMsg_AchievementEvent::set_achievement(::google::protobuf::int32 value) {
  set_has_achievement();
  achievement_ = value;
}

// optional int32 count = 2;
inline bool CUsrMsg_AchievementEvent::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_AchievementEvent::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_AchievementEvent::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_AchievementEvent::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CUsrMsg_AchievementEvent::count() const {
  return count_;
}
inline void CUsrMsg_AchievementEvent::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 user_id = 3;
inline bool CUsrMsg_AchievementEvent::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_AchievementEvent::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_AchievementEvent::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_AchievementEvent::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 CUsrMsg_AchievementEvent::user_id() const {
  return user_id_;
}
inline void CUsrMsg_AchievementEvent::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_PlayerStatsUpdate_Stat

// optional int32 idx = 1;
inline bool CUsrMsg_PlayerStatsUpdate_Stat::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_PlayerStatsUpdate_Stat::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_PlayerStatsUpdate_Stat::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_PlayerStatsUpdate_Stat::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 CUsrMsg_PlayerStatsUpdate_Stat::idx() const {
  return idx_;
}
inline void CUsrMsg_PlayerStatsUpdate_Stat::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
}

// optional int32 delta = 2;
inline bool CUsrMsg_PlayerStatsUpdate_Stat::has_delta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_PlayerStatsUpdate_Stat::set_has_delta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_PlayerStatsUpdate_Stat::clear_has_delta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_PlayerStatsUpdate_Stat::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
inline ::google::protobuf::int32 CUsrMsg_PlayerStatsUpdate_Stat::delta() const {
  return delta_;
}
inline void CUsrMsg_PlayerStatsUpdate_Stat::set_delta(::google::protobuf::int32 value) {
  set_has_delta();
  delta_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_PlayerStatsUpdate

// optional int32 version = 1;
inline bool CUsrMsg_PlayerStatsUpdate::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_PlayerStatsUpdate::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_PlayerStatsUpdate::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_PlayerStatsUpdate::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 CUsrMsg_PlayerStatsUpdate::version() const {
  return version_;
}
inline void CUsrMsg_PlayerStatsUpdate::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// repeated .CUsrMsg_PlayerStatsUpdate.Stat stats = 4;
inline int CUsrMsg_PlayerStatsUpdate::stats_size() const {
  return stats_.size();
}
inline void CUsrMsg_PlayerStatsUpdate::clear_stats() {
  stats_.Clear();
}
inline const ::CUsrMsg_PlayerStatsUpdate_Stat& CUsrMsg_PlayerStatsUpdate::stats(int index) const {
  return stats_.Get(index);
}
inline ::CUsrMsg_PlayerStatsUpdate_Stat* CUsrMsg_PlayerStatsUpdate::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::CUsrMsg_PlayerStatsUpdate_Stat* CUsrMsg_PlayerStatsUpdate::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CUsrMsg_PlayerStatsUpdate_Stat >&
CUsrMsg_PlayerStatsUpdate::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CUsrMsg_PlayerStatsUpdate_Stat >*
CUsrMsg_PlayerStatsUpdate::mutable_stats() {
  return &stats_;
}

// optional int32 user_id = 5;
inline bool CUsrMsg_PlayerStatsUpdate::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_PlayerStatsUpdate::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_PlayerStatsUpdate::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_PlayerStatsUpdate::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 CUsrMsg_PlayerStatsUpdate::user_id() const {
  return user_id_;
}
inline void CUsrMsg_PlayerStatsUpdate::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 crc = 6;
inline bool CUsrMsg_PlayerStatsUpdate::has_crc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_PlayerStatsUpdate::set_has_crc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_PlayerStatsUpdate::clear_has_crc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_PlayerStatsUpdate::clear_crc() {
  crc_ = 0;
  clear_has_crc();
}
inline ::google::protobuf::int32 CUsrMsg_PlayerStatsUpdate::crc() const {
  return crc_;
}
inline void CUsrMsg_PlayerStatsUpdate::set_crc(::google::protobuf::int32 value) {
  set_has_crc();
  crc_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_CallVoteFailed

// optional int32 reason = 1;
inline bool CUsrMsg_CallVoteFailed::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_CallVoteFailed::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_CallVoteFailed::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_CallVoteFailed::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 CUsrMsg_CallVoteFailed::reason() const {
  return reason_;
}
inline void CUsrMsg_CallVoteFailed::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
}

// optional int32 time = 2;
inline bool CUsrMsg_CallVoteFailed::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_CallVoteFailed::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_CallVoteFailed::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_CallVoteFailed::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 CUsrMsg_CallVoteFailed::time() const {
  return time_;
}
inline void CUsrMsg_CallVoteFailed::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_VoteStart

// optional int32 team = 1;
inline bool CUsrMsg_VoteStart::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_VoteStart::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_VoteStart::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_VoteStart::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CUsrMsg_VoteStart::team() const {
  return team_;
}
inline void CUsrMsg_VoteStart::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// optional int32 ent_idx = 2;
inline bool CUsrMsg_VoteStart::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_VoteStart::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_VoteStart::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_VoteStart::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CUsrMsg_VoteStart::ent_idx() const {
  return ent_idx_;
}
inline void CUsrMsg_VoteStart::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
}

// optional int32 vote_type = 3;
inline bool CUsrMsg_VoteStart::has_vote_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_VoteStart::set_has_vote_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_VoteStart::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_VoteStart::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
inline ::google::protobuf::int32 CUsrMsg_VoteStart::vote_type() const {
  return vote_type_;
}
inline void CUsrMsg_VoteStart::set_vote_type(::google::protobuf::int32 value) {
  set_has_vote_type();
  vote_type_ = value;
}

// optional string disp_str = 4;
inline bool CUsrMsg_VoteStart::has_disp_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_VoteStart::set_has_disp_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_VoteStart::clear_has_disp_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_VoteStart::clear_disp_str() {
  if (disp_str_ != &::google::protobuf::internal::kEmptyString) {
    disp_str_->clear();
  }
  clear_has_disp_str();
}
inline const ::std::string& CUsrMsg_VoteStart::disp_str() const {
  return *disp_str_;
}
inline void CUsrMsg_VoteStart::set_disp_str(const ::std::string& value) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CUsrMsg_VoteStart::set_disp_str(const char* value) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CUsrMsg_VoteStart::set_disp_str(const char* value, size_t size) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VoteStart::mutable_disp_str() {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  return disp_str_;
}
inline ::std::string* CUsrMsg_VoteStart::release_disp_str() {
  clear_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = disp_str_;
    disp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_VoteStart::set_allocated_disp_str(::std::string* disp_str) {
  if (disp_str_ != &::google::protobuf::internal::kEmptyString) {
    delete disp_str_;
  }
  if (disp_str) {
    set_has_disp_str();
    disp_str_ = disp_str;
  } else {
    clear_has_disp_str();
    disp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string details_str = 5;
inline bool CUsrMsg_VoteStart::has_details_str() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUsrMsg_VoteStart::set_has_details_str() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CUsrMsg_VoteStart::clear_has_details_str() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CUsrMsg_VoteStart::clear_details_str() {
  if (details_str_ != &::google::protobuf::internal::kEmptyString) {
    details_str_->clear();
  }
  clear_has_details_str();
}
inline const ::std::string& CUsrMsg_VoteStart::details_str() const {
  return *details_str_;
}
inline void CUsrMsg_VoteStart::set_details_str(const ::std::string& value) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CUsrMsg_VoteStart::set_details_str(const char* value) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CUsrMsg_VoteStart::set_details_str(const char* value, size_t size) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VoteStart::mutable_details_str() {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  return details_str_;
}
inline ::std::string* CUsrMsg_VoteStart::release_details_str() {
  clear_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = details_str_;
    details_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_VoteStart::set_allocated_details_str(::std::string* details_str) {
  if (details_str_ != &::google::protobuf::internal::kEmptyString) {
    delete details_str_;
  }
  if (details_str) {
    set_has_details_str();
    details_str_ = details_str;
  } else {
    clear_has_details_str();
    details_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string other_team_str = 6;
inline bool CUsrMsg_VoteStart::has_other_team_str() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUsrMsg_VoteStart::set_has_other_team_str() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CUsrMsg_VoteStart::clear_has_other_team_str() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CUsrMsg_VoteStart::clear_other_team_str() {
  if (other_team_str_ != &::google::protobuf::internal::kEmptyString) {
    other_team_str_->clear();
  }
  clear_has_other_team_str();
}
inline const ::std::string& CUsrMsg_VoteStart::other_team_str() const {
  return *other_team_str_;
}
inline void CUsrMsg_VoteStart::set_other_team_str(const ::std::string& value) {
  set_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(value);
}
inline void CUsrMsg_VoteStart::set_other_team_str(const char* value) {
  set_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(value);
}
inline void CUsrMsg_VoteStart::set_other_team_str(const char* value, size_t size) {
  set_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VoteStart::mutable_other_team_str() {
  set_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    other_team_str_ = new ::std::string;
  }
  return other_team_str_;
}
inline ::std::string* CUsrMsg_VoteStart::release_other_team_str() {
  clear_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = other_team_str_;
    other_team_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_VoteStart::set_allocated_other_team_str(::std::string* other_team_str) {
  if (other_team_str_ != &::google::protobuf::internal::kEmptyString) {
    delete other_team_str_;
  }
  if (other_team_str) {
    set_has_other_team_str();
    other_team_str_ = other_team_str;
  } else {
    clear_has_other_team_str();
    other_team_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool is_yes_no_vote = 7;
inline bool CUsrMsg_VoteStart::has_is_yes_no_vote() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CUsrMsg_VoteStart::set_has_is_yes_no_vote() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CUsrMsg_VoteStart::clear_has_is_yes_no_vote() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CUsrMsg_VoteStart::clear_is_yes_no_vote() {
  is_yes_no_vote_ = false;
  clear_has_is_yes_no_vote();
}
inline bool CUsrMsg_VoteStart::is_yes_no_vote() const {
  return is_yes_no_vote_;
}
inline void CUsrMsg_VoteStart::set_is_yes_no_vote(bool value) {
  set_has_is_yes_no_vote();
  is_yes_no_vote_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_VotePass

// optional int32 team = 1;
inline bool CUsrMsg_VotePass::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_VotePass::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_VotePass::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_VotePass::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CUsrMsg_VotePass::team() const {
  return team_;
}
inline void CUsrMsg_VotePass::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// optional int32 vote_type = 2;
inline bool CUsrMsg_VotePass::has_vote_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_VotePass::set_has_vote_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_VotePass::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_VotePass::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
inline ::google::protobuf::int32 CUsrMsg_VotePass::vote_type() const {
  return vote_type_;
}
inline void CUsrMsg_VotePass::set_vote_type(::google::protobuf::int32 value) {
  set_has_vote_type();
  vote_type_ = value;
}

// optional string disp_str = 3;
inline bool CUsrMsg_VotePass::has_disp_str() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_VotePass::set_has_disp_str() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_VotePass::clear_has_disp_str() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_VotePass::clear_disp_str() {
  if (disp_str_ != &::google::protobuf::internal::kEmptyString) {
    disp_str_->clear();
  }
  clear_has_disp_str();
}
inline const ::std::string& CUsrMsg_VotePass::disp_str() const {
  return *disp_str_;
}
inline void CUsrMsg_VotePass::set_disp_str(const ::std::string& value) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CUsrMsg_VotePass::set_disp_str(const char* value) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CUsrMsg_VotePass::set_disp_str(const char* value, size_t size) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VotePass::mutable_disp_str() {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  return disp_str_;
}
inline ::std::string* CUsrMsg_VotePass::release_disp_str() {
  clear_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = disp_str_;
    disp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_VotePass::set_allocated_disp_str(::std::string* disp_str) {
  if (disp_str_ != &::google::protobuf::internal::kEmptyString) {
    delete disp_str_;
  }
  if (disp_str) {
    set_has_disp_str();
    disp_str_ = disp_str;
  } else {
    clear_has_disp_str();
    disp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string details_str = 4;
inline bool CUsrMsg_VotePass::has_details_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_VotePass::set_has_details_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_VotePass::clear_has_details_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_VotePass::clear_details_str() {
  if (details_str_ != &::google::protobuf::internal::kEmptyString) {
    details_str_->clear();
  }
  clear_has_details_str();
}
inline const ::std::string& CUsrMsg_VotePass::details_str() const {
  return *details_str_;
}
inline void CUsrMsg_VotePass::set_details_str(const ::std::string& value) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CUsrMsg_VotePass::set_details_str(const char* value) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CUsrMsg_VotePass::set_details_str(const char* value, size_t size) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VotePass::mutable_details_str() {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  return details_str_;
}
inline ::std::string* CUsrMsg_VotePass::release_details_str() {
  clear_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = details_str_;
    details_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_VotePass::set_allocated_details_str(::std::string* details_str) {
  if (details_str_ != &::google::protobuf::internal::kEmptyString) {
    delete details_str_;
  }
  if (details_str) {
    set_has_details_str();
    details_str_ = details_str;
  } else {
    clear_has_details_str();
    details_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CUsrMsg_VoteFailed

// optional int32 team = 1;
inline bool CUsrMsg_VoteFailed::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_VoteFailed::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_VoteFailed::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_VoteFailed::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CUsrMsg_VoteFailed::team() const {
  return team_;
}
inline void CUsrMsg_VoteFailed::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// optional int32 reason = 2;
inline bool CUsrMsg_VoteFailed::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_VoteFailed::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_VoteFailed::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_VoteFailed::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 CUsrMsg_VoteFailed::reason() const {
  return reason_;
}
inline void CUsrMsg_VoteFailed::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_VoteSetup

// repeated string potential_issues = 1;
inline int CUsrMsg_VoteSetup::potential_issues_size() const {
  return potential_issues_.size();
}
inline void CUsrMsg_VoteSetup::clear_potential_issues() {
  potential_issues_.Clear();
}
inline const ::std::string& CUsrMsg_VoteSetup::potential_issues(int index) const {
  return potential_issues_.Get(index);
}
inline ::std::string* CUsrMsg_VoteSetup::mutable_potential_issues(int index) {
  return potential_issues_.Mutable(index);
}
inline void CUsrMsg_VoteSetup::set_potential_issues(int index, const ::std::string& value) {
  potential_issues_.Mutable(index)->assign(value);
}
inline void CUsrMsg_VoteSetup::set_potential_issues(int index, const char* value) {
  potential_issues_.Mutable(index)->assign(value);
}
inline void CUsrMsg_VoteSetup::set_potential_issues(int index, const char* value, size_t size) {
  potential_issues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_VoteSetup::add_potential_issues() {
  return potential_issues_.Add();
}
inline void CUsrMsg_VoteSetup::add_potential_issues(const ::std::string& value) {
  potential_issues_.Add()->assign(value);
}
inline void CUsrMsg_VoteSetup::add_potential_issues(const char* value) {
  potential_issues_.Add()->assign(value);
}
inline void CUsrMsg_VoteSetup::add_potential_issues(const char* value, size_t size) {
  potential_issues_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CUsrMsg_VoteSetup::potential_issues() const {
  return potential_issues_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CUsrMsg_VoteSetup::mutable_potential_issues() {
  return &potential_issues_;
}

// -------------------------------------------------------------------

// CUsrMsg_SendLastKillerDamageToClient

// optional int32 num_hits_given = 1;
inline bool CUsrMsg_SendLastKillerDamageToClient::has_num_hits_given() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_SendLastKillerDamageToClient::set_has_num_hits_given() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_SendLastKillerDamageToClient::clear_has_num_hits_given() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_SendLastKillerDamageToClient::clear_num_hits_given() {
  num_hits_given_ = 0;
  clear_has_num_hits_given();
}
inline ::google::protobuf::int32 CUsrMsg_SendLastKillerDamageToClient::num_hits_given() const {
  return num_hits_given_;
}
inline void CUsrMsg_SendLastKillerDamageToClient::set_num_hits_given(::google::protobuf::int32 value) {
  set_has_num_hits_given();
  num_hits_given_ = value;
}

// optional int32 damage_given = 2;
inline bool CUsrMsg_SendLastKillerDamageToClient::has_damage_given() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_SendLastKillerDamageToClient::set_has_damage_given() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_SendLastKillerDamageToClient::clear_has_damage_given() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_SendLastKillerDamageToClient::clear_damage_given() {
  damage_given_ = 0;
  clear_has_damage_given();
}
inline ::google::protobuf::int32 CUsrMsg_SendLastKillerDamageToClient::damage_given() const {
  return damage_given_;
}
inline void CUsrMsg_SendLastKillerDamageToClient::set_damage_given(::google::protobuf::int32 value) {
  set_has_damage_given();
  damage_given_ = value;
}

// optional int32 num_hits_taken = 3;
inline bool CUsrMsg_SendLastKillerDamageToClient::has_num_hits_taken() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_SendLastKillerDamageToClient::set_has_num_hits_taken() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_SendLastKillerDamageToClient::clear_has_num_hits_taken() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_SendLastKillerDamageToClient::clear_num_hits_taken() {
  num_hits_taken_ = 0;
  clear_has_num_hits_taken();
}
inline ::google::protobuf::int32 CUsrMsg_SendLastKillerDamageToClient::num_hits_taken() const {
  return num_hits_taken_;
}
inline void CUsrMsg_SendLastKillerDamageToClient::set_num_hits_taken(::google::protobuf::int32 value) {
  set_has_num_hits_taken();
  num_hits_taken_ = value;
}

// optional int32 damage_taken = 4;
inline bool CUsrMsg_SendLastKillerDamageToClient::has_damage_taken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_SendLastKillerDamageToClient::set_has_damage_taken() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_SendLastKillerDamageToClient::clear_has_damage_taken() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_SendLastKillerDamageToClient::clear_damage_taken() {
  damage_taken_ = 0;
  clear_has_damage_taken();
}
inline ::google::protobuf::int32 CUsrMsg_SendLastKillerDamageToClient::damage_taken() const {
  return damage_taken_;
}
inline void CUsrMsg_SendLastKillerDamageToClient::set_damage_taken(::google::protobuf::int32 value) {
  set_has_damage_taken();
  damage_taken_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_ShowMenu

// optional int32 bits_valid_slots = 1;
inline bool CUsrMsg_ShowMenu::has_bits_valid_slots() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_ShowMenu::set_has_bits_valid_slots() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_ShowMenu::clear_has_bits_valid_slots() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_ShowMenu::clear_bits_valid_slots() {
  bits_valid_slots_ = 0;
  clear_has_bits_valid_slots();
}
inline ::google::protobuf::int32 CUsrMsg_ShowMenu::bits_valid_slots() const {
  return bits_valid_slots_;
}
inline void CUsrMsg_ShowMenu::set_bits_valid_slots(::google::protobuf::int32 value) {
  set_has_bits_valid_slots();
  bits_valid_slots_ = value;
}

// optional int32 display_time = 2;
inline bool CUsrMsg_ShowMenu::has_display_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_ShowMenu::set_has_display_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_ShowMenu::clear_has_display_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_ShowMenu::clear_display_time() {
  display_time_ = 0;
  clear_has_display_time();
}
inline ::google::protobuf::int32 CUsrMsg_ShowMenu::display_time() const {
  return display_time_;
}
inline void CUsrMsg_ShowMenu::set_display_time(::google::protobuf::int32 value) {
  set_has_display_time();
  display_time_ = value;
}

// optional string menu_string = 3;
inline bool CUsrMsg_ShowMenu::has_menu_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_ShowMenu::set_has_menu_string() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_ShowMenu::clear_has_menu_string() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_ShowMenu::clear_menu_string() {
  if (menu_string_ != &::google::protobuf::internal::kEmptyString) {
    menu_string_->clear();
  }
  clear_has_menu_string();
}
inline const ::std::string& CUsrMsg_ShowMenu::menu_string() const {
  return *menu_string_;
}
inline void CUsrMsg_ShowMenu::set_menu_string(const ::std::string& value) {
  set_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(value);
}
inline void CUsrMsg_ShowMenu::set_menu_string(const char* value) {
  set_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(value);
}
inline void CUsrMsg_ShowMenu::set_menu_string(const char* value, size_t size) {
  set_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_ShowMenu::mutable_menu_string() {
  set_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    menu_string_ = new ::std::string;
  }
  return menu_string_;
}
inline ::std::string* CUsrMsg_ShowMenu::release_menu_string() {
  clear_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = menu_string_;
    menu_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_ShowMenu::set_allocated_menu_string(::std::string* menu_string) {
  if (menu_string_ != &::google::protobuf::internal::kEmptyString) {
    delete menu_string_;
  }
  if (menu_string) {
    set_has_menu_string();
    menu_string_ = menu_string;
  } else {
    clear_has_menu_string();
    menu_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CUsrMsg_GlowPropTurnOff

// optional int32 entidx = 1;
inline bool CUsrMsg_GlowPropTurnOff::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_GlowPropTurnOff::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_GlowPropTurnOff::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_GlowPropTurnOff::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CUsrMsg_GlowPropTurnOff::entidx() const {
  return entidx_;
}
inline void CUsrMsg_GlowPropTurnOff::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_BreakModel

// optional string break_msg = 1;
inline bool CUsrMsg_BreakModel::has_break_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_BreakModel::set_has_break_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_BreakModel::clear_has_break_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_BreakModel::clear_break_msg() {
  if (break_msg_ != &::google::protobuf::internal::kEmptyString) {
    break_msg_->clear();
  }
  clear_has_break_msg();
}
inline const ::std::string& CUsrMsg_BreakModel::break_msg() const {
  return *break_msg_;
}
inline void CUsrMsg_BreakModel::set_break_msg(const ::std::string& value) {
  set_has_break_msg();
  if (break_msg_ == &::google::protobuf::internal::kEmptyString) {
    break_msg_ = new ::std::string;
  }
  break_msg_->assign(value);
}
inline void CUsrMsg_BreakModel::set_break_msg(const char* value) {
  set_has_break_msg();
  if (break_msg_ == &::google::protobuf::internal::kEmptyString) {
    break_msg_ = new ::std::string;
  }
  break_msg_->assign(value);
}
inline void CUsrMsg_BreakModel::set_break_msg(const char* value, size_t size) {
  set_has_break_msg();
  if (break_msg_ == &::google::protobuf::internal::kEmptyString) {
    break_msg_ = new ::std::string;
  }
  break_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUsrMsg_BreakModel::mutable_break_msg() {
  set_has_break_msg();
  if (break_msg_ == &::google::protobuf::internal::kEmptyString) {
    break_msg_ = new ::std::string;
  }
  return break_msg_;
}
inline ::std::string* CUsrMsg_BreakModel::release_break_msg() {
  clear_has_break_msg();
  if (break_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = break_msg_;
    break_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CUsrMsg_BreakModel::set_allocated_break_msg(::std::string* break_msg) {
  if (break_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete break_msg_;
  }
  if (break_msg) {
    set_has_break_msg();
    break_msg_ = break_msg;
  } else {
    clear_has_break_msg();
    break_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 model_id = 2;
inline bool CUsrMsg_BreakModel::has_model_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_BreakModel::set_has_model_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_BreakModel::clear_has_model_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_BreakModel::clear_model_id() {
  model_id_ = 0;
  clear_has_model_id();
}
inline ::google::protobuf::int32 CUsrMsg_BreakModel::model_id() const {
  return model_id_;
}
inline void CUsrMsg_BreakModel::set_model_id(::google::protobuf::int32 value) {
  set_has_model_id();
  model_id_ = value;
}

// optional .CMsgVector origin = 3;
inline bool CUsrMsg_BreakModel::has_origin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_BreakModel::set_has_origin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_BreakModel::clear_has_origin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_BreakModel::clear_origin() {
  if (origin_ != NULL) origin_->::CMsgVector::Clear();
  clear_has_origin();
}
inline const ::CMsgVector& CUsrMsg_BreakModel::origin() const {
  return origin_ != NULL ? *origin_ : *default_instance_->origin_;
}
inline ::CMsgVector* CUsrMsg_BreakModel::mutable_origin() {
  set_has_origin();
  if (origin_ == NULL) origin_ = new ::CMsgVector;
  return origin_;
}
inline ::CMsgVector* CUsrMsg_BreakModel::release_origin() {
  clear_has_origin();
  ::CMsgVector* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline void CUsrMsg_BreakModel::set_allocated_origin(::CMsgVector* origin) {
  delete origin_;
  origin_ = origin;
  if (origin) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
}

// optional .CMsgQAngle angles = 4;
inline bool CUsrMsg_BreakModel::has_angles() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_BreakModel::set_has_angles() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_BreakModel::clear_has_angles() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_BreakModel::clear_angles() {
  if (angles_ != NULL) angles_->::CMsgQAngle::Clear();
  clear_has_angles();
}
inline const ::CMsgQAngle& CUsrMsg_BreakModel::angles() const {
  return angles_ != NULL ? *angles_ : *default_instance_->angles_;
}
inline ::CMsgQAngle* CUsrMsg_BreakModel::mutable_angles() {
  set_has_angles();
  if (angles_ == NULL) angles_ = new ::CMsgQAngle;
  return angles_;
}
inline ::CMsgQAngle* CUsrMsg_BreakModel::release_angles() {
  clear_has_angles();
  ::CMsgQAngle* temp = angles_;
  angles_ = NULL;
  return temp;
}
inline void CUsrMsg_BreakModel::set_allocated_angles(::CMsgQAngle* angles) {
  delete angles_;
  angles_ = angles;
  if (angles) {
    set_has_angles();
  } else {
    clear_has_angles();
  }
}

// -------------------------------------------------------------------

// CUsrMsg_Damage

// optional int32 dmg_saved = 1;
inline bool CUsrMsg_Damage::has_dmg_saved() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_Damage::set_has_dmg_saved() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_Damage::clear_has_dmg_saved() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_Damage::clear_dmg_saved() {
  dmg_saved_ = 0;
  clear_has_dmg_saved();
}
inline ::google::protobuf::int32 CUsrMsg_Damage::dmg_saved() const {
  return dmg_saved_;
}
inline void CUsrMsg_Damage::set_dmg_saved(::google::protobuf::int32 value) {
  set_has_dmg_saved();
  dmg_saved_ = value;
}

// optional int32 dmg_taken = 2;
inline bool CUsrMsg_Damage::has_dmg_taken() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUsrMsg_Damage::set_has_dmg_taken() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUsrMsg_Damage::clear_has_dmg_taken() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUsrMsg_Damage::clear_dmg_taken() {
  dmg_taken_ = 0;
  clear_has_dmg_taken();
}
inline ::google::protobuf::int32 CUsrMsg_Damage::dmg_taken() const {
  return dmg_taken_;
}
inline void CUsrMsg_Damage::set_dmg_taken(::google::protobuf::int32 value) {
  set_has_dmg_taken();
  dmg_taken_ = value;
}

// optional int32 dmg_bits = 3;
inline bool CUsrMsg_Damage::has_dmg_bits() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUsrMsg_Damage::set_has_dmg_bits() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUsrMsg_Damage::clear_has_dmg_bits() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUsrMsg_Damage::clear_dmg_bits() {
  dmg_bits_ = 0;
  clear_has_dmg_bits();
}
inline ::google::protobuf::int32 CUsrMsg_Damage::dmg_bits() const {
  return dmg_bits_;
}
inline void CUsrMsg_Damage::set_dmg_bits(::google::protobuf::int32 value) {
  set_has_dmg_bits();
  dmg_bits_ = value;
}

// optional .CMsgVector dmg_origin = 4;
inline bool CUsrMsg_Damage::has_dmg_origin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUsrMsg_Damage::set_has_dmg_origin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUsrMsg_Damage::clear_has_dmg_origin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUsrMsg_Damage::clear_dmg_origin() {
  if (dmg_origin_ != NULL) dmg_origin_->::CMsgVector::Clear();
  clear_has_dmg_origin();
}
inline const ::CMsgVector& CUsrMsg_Damage::dmg_origin() const {
  return dmg_origin_ != NULL ? *dmg_origin_ : *default_instance_->dmg_origin_;
}
inline ::CMsgVector* CUsrMsg_Damage::mutable_dmg_origin() {
  set_has_dmg_origin();
  if (dmg_origin_ == NULL) dmg_origin_ = new ::CMsgVector;
  return dmg_origin_;
}
inline ::CMsgVector* CUsrMsg_Damage::release_dmg_origin() {
  clear_has_dmg_origin();
  ::CMsgVector* temp = dmg_origin_;
  dmg_origin_ = NULL;
  return temp;
}
inline void CUsrMsg_Damage::set_allocated_dmg_origin(::CMsgVector* dmg_origin) {
  delete dmg_origin_;
  dmg_origin_ = dmg_origin;
  if (dmg_origin) {
    set_has_dmg_origin();
  } else {
    clear_has_dmg_origin();
  }
}

// -------------------------------------------------------------------

// CJBUsrMsg_ExtVote_Option

// optional string id = 1;
inline bool CJBUsrMsg_ExtVote_Option::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_ExtVote_Option::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_ExtVote_Option::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_ExtVote_Option::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& CJBUsrMsg_ExtVote_Option::id() const {
  return *id_;
}
inline void CJBUsrMsg_ExtVote_Option::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void CJBUsrMsg_ExtVote_Option::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void CJBUsrMsg_ExtVote_Option::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_ExtVote_Option::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* CJBUsrMsg_ExtVote_Option::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_ExtVote_Option::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 votes = 2;
inline bool CJBUsrMsg_ExtVote_Option::has_votes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJBUsrMsg_ExtVote_Option::set_has_votes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJBUsrMsg_ExtVote_Option::clear_has_votes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJBUsrMsg_ExtVote_Option::clear_votes() {
  votes_ = 0u;
  clear_has_votes();
}
inline ::google::protobuf::uint32 CJBUsrMsg_ExtVote_Option::votes() const {
  return votes_;
}
inline void CJBUsrMsg_ExtVote_Option::set_votes(::google::protobuf::uint32 value) {
  set_has_votes();
  votes_ = value;
}

// -------------------------------------------------------------------

// CJBUsrMsg_ExtVoteStateChange

// optional int32 state = 1;
inline bool CJBUsrMsg_ExtVoteStateChange::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_ExtVoteStateChange::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_ExtVoteStateChange::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_ExtVoteStateChange::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CJBUsrMsg_ExtVoteStateChange::state() const {
  return state_;
}
inline void CJBUsrMsg_ExtVoteStateChange::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional float time_offset = 2;
inline bool CJBUsrMsg_ExtVoteStateChange::has_time_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJBUsrMsg_ExtVoteStateChange::set_has_time_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJBUsrMsg_ExtVoteStateChange::clear_has_time_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJBUsrMsg_ExtVoteStateChange::clear_time_offset() {
  time_offset_ = 0;
  clear_has_time_offset();
}
inline float CJBUsrMsg_ExtVoteStateChange::time_offset() const {
  return time_offset_;
}
inline void CJBUsrMsg_ExtVoteStateChange::set_time_offset(float value) {
  set_has_time_offset();
  time_offset_ = value;
}

// repeated .CJBUsrMsg_ExtVote_Option options = 3;
inline int CJBUsrMsg_ExtVoteStateChange::options_size() const {
  return options_.size();
}
inline void CJBUsrMsg_ExtVoteStateChange::clear_options() {
  options_.Clear();
}
inline const ::CJBUsrMsg_ExtVote_Option& CJBUsrMsg_ExtVoteStateChange::options(int index) const {
  return options_.Get(index);
}
inline ::CJBUsrMsg_ExtVote_Option* CJBUsrMsg_ExtVoteStateChange::mutable_options(int index) {
  return options_.Mutable(index);
}
inline ::CJBUsrMsg_ExtVote_Option* CJBUsrMsg_ExtVoteStateChange::add_options() {
  return options_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CJBUsrMsg_ExtVote_Option >&
CJBUsrMsg_ExtVoteStateChange::options() const {
  return options_;
}
inline ::google::protobuf::RepeatedPtrField< ::CJBUsrMsg_ExtVote_Option >*
CJBUsrMsg_ExtVoteStateChange::mutable_options() {
  return &options_;
}

// -------------------------------------------------------------------

// CJBUsrMsg_ExtVoteUpdate

// optional .CJBUsrMsg_ExtVote_Option option = 1;
inline bool CJBUsrMsg_ExtVoteUpdate::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_ExtVoteUpdate::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_ExtVoteUpdate::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_ExtVoteUpdate::clear_option() {
  if (option_ != NULL) option_->::CJBUsrMsg_ExtVote_Option::Clear();
  clear_has_option();
}
inline const ::CJBUsrMsg_ExtVote_Option& CJBUsrMsg_ExtVoteUpdate::option() const {
  return option_ != NULL ? *option_ : *default_instance_->option_;
}
inline ::CJBUsrMsg_ExtVote_Option* CJBUsrMsg_ExtVoteUpdate::mutable_option() {
  set_has_option();
  if (option_ == NULL) option_ = new ::CJBUsrMsg_ExtVote_Option;
  return option_;
}
inline ::CJBUsrMsg_ExtVote_Option* CJBUsrMsg_ExtVoteUpdate::release_option() {
  clear_has_option();
  ::CJBUsrMsg_ExtVote_Option* temp = option_;
  option_ = NULL;
  return temp;
}
inline void CJBUsrMsg_ExtVoteUpdate::set_allocated_option(::CJBUsrMsg_ExtVote_Option* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
}

// -------------------------------------------------------------------

// CJBUsrMsg_ShowRoundIntro_CRoundIntroModel

// optional string model_name = 1;
inline bool CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::has_model_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_has_model_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::clear_has_model_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::clear_model_name() {
  if (model_name_ != &::google::protobuf::internal::kEmptyString) {
    model_name_->clear();
  }
  clear_has_model_name();
}
inline const ::std::string& CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::model_name() const {
  return *model_name_;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_model_name(const ::std::string& value) {
  set_has_model_name();
  if (model_name_ == &::google::protobuf::internal::kEmptyString) {
    model_name_ = new ::std::string;
  }
  model_name_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_model_name(const char* value) {
  set_has_model_name();
  if (model_name_ == &::google::protobuf::internal::kEmptyString) {
    model_name_ = new ::std::string;
  }
  model_name_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_model_name(const char* value, size_t size) {
  set_has_model_name();
  if (model_name_ == &::google::protobuf::internal::kEmptyString) {
    model_name_ = new ::std::string;
  }
  model_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::mutable_model_name() {
  set_has_model_name();
  if (model_name_ == &::google::protobuf::internal::kEmptyString) {
    model_name_ = new ::std::string;
  }
  return model_name_;
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::release_model_name() {
  clear_has_model_name();
  if (model_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = model_name_;
    model_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_allocated_model_name(::std::string* model_name) {
  if (model_name_ != &::google::protobuf::internal::kEmptyString) {
    delete model_name_;
  }
  if (model_name) {
    set_has_model_name();
    model_name_ = model_name;
  } else {
    clear_has_model_name();
    model_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string anim_sequence = 2;
inline bool CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::has_anim_sequence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_has_anim_sequence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::clear_has_anim_sequence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::clear_anim_sequence() {
  if (anim_sequence_ != &::google::protobuf::internal::kEmptyString) {
    anim_sequence_->clear();
  }
  clear_has_anim_sequence();
}
inline const ::std::string& CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::anim_sequence() const {
  return *anim_sequence_;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_anim_sequence(const ::std::string& value) {
  set_has_anim_sequence();
  if (anim_sequence_ == &::google::protobuf::internal::kEmptyString) {
    anim_sequence_ = new ::std::string;
  }
  anim_sequence_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_anim_sequence(const char* value) {
  set_has_anim_sequence();
  if (anim_sequence_ == &::google::protobuf::internal::kEmptyString) {
    anim_sequence_ = new ::std::string;
  }
  anim_sequence_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_anim_sequence(const char* value, size_t size) {
  set_has_anim_sequence();
  if (anim_sequence_ == &::google::protobuf::internal::kEmptyString) {
    anim_sequence_ = new ::std::string;
  }
  anim_sequence_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::mutable_anim_sequence() {
  set_has_anim_sequence();
  if (anim_sequence_ == &::google::protobuf::internal::kEmptyString) {
    anim_sequence_ = new ::std::string;
  }
  return anim_sequence_;
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::release_anim_sequence() {
  clear_has_anim_sequence();
  if (anim_sequence_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = anim_sequence_;
    anim_sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_allocated_anim_sequence(::std::string* anim_sequence) {
  if (anim_sequence_ != &::google::protobuf::internal::kEmptyString) {
    delete anim_sequence_;
  }
  if (anim_sequence) {
    set_has_anim_sequence();
    anim_sequence_ = anim_sequence;
  } else {
    clear_has_anim_sequence();
    anim_sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string weapon_model = 3;
inline bool CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::has_weapon_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_has_weapon_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::clear_has_weapon_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::clear_weapon_model() {
  if (weapon_model_ != &::google::protobuf::internal::kEmptyString) {
    weapon_model_->clear();
  }
  clear_has_weapon_model();
}
inline const ::std::string& CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::weapon_model() const {
  return *weapon_model_;
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_weapon_model(const ::std::string& value) {
  set_has_weapon_model();
  if (weapon_model_ == &::google::protobuf::internal::kEmptyString) {
    weapon_model_ = new ::std::string;
  }
  weapon_model_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_weapon_model(const char* value) {
  set_has_weapon_model();
  if (weapon_model_ == &::google::protobuf::internal::kEmptyString) {
    weapon_model_ = new ::std::string;
  }
  weapon_model_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_weapon_model(const char* value, size_t size) {
  set_has_weapon_model();
  if (weapon_model_ == &::google::protobuf::internal::kEmptyString) {
    weapon_model_ = new ::std::string;
  }
  weapon_model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::mutable_weapon_model() {
  set_has_weapon_model();
  if (weapon_model_ == &::google::protobuf::internal::kEmptyString) {
    weapon_model_ = new ::std::string;
  }
  return weapon_model_;
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::release_weapon_model() {
  clear_has_weapon_model();
  if (weapon_model_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = weapon_model_;
    weapon_model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::set_allocated_weapon_model(::std::string* weapon_model) {
  if (weapon_model_ != &::google::protobuf::internal::kEmptyString) {
    delete weapon_model_;
  }
  if (weapon_model) {
    set_has_weapon_model();
    weapon_model_ = weapon_model;
  } else {
    clear_has_weapon_model();
    weapon_model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CJBUsrMsg_ShowRoundIntro

// optional int32 team_num = 1;
inline bool CJBUsrMsg_ShowRoundIntro::has_team_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro::set_has_team_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_has_team_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_team_num() {
  team_num_ = 0;
  clear_has_team_num();
}
inline ::google::protobuf::int32 CJBUsrMsg_ShowRoundIntro::team_num() const {
  return team_num_;
}
inline void CJBUsrMsg_ShowRoundIntro::set_team_num(::google::protobuf::int32 value) {
  set_has_team_num();
  team_num_ = value;
}

// optional string title = 2;
inline bool CJBUsrMsg_ShowRoundIntro::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CJBUsrMsg_ShowRoundIntro::title() const {
  return *title_;
}
inline void CJBUsrMsg_ShowRoundIntro::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_ShowRoundIntro::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string description = 3;
inline bool CJBUsrMsg_ShowRoundIntro::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_description() {
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& CJBUsrMsg_ShowRoundIntro::description() const {
  return *description_;
}
inline void CJBUsrMsg_ShowRoundIntro::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void CJBUsrMsg_ShowRoundIntro::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    description_ = new ::std::string;
  }
  return description_;
}
inline ::std::string* CJBUsrMsg_ShowRoundIntro::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_ShowRoundIntro::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .CMsgRGBA text_color = 4;
inline bool CJBUsrMsg_ShowRoundIntro::has_text_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro::set_has_text_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_has_text_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_text_color() {
  if (text_color_ != NULL) text_color_->::CMsgRGBA::Clear();
  clear_has_text_color();
}
inline const ::CMsgRGBA& CJBUsrMsg_ShowRoundIntro::text_color() const {
  return text_color_ != NULL ? *text_color_ : *default_instance_->text_color_;
}
inline ::CMsgRGBA* CJBUsrMsg_ShowRoundIntro::mutable_text_color() {
  set_has_text_color();
  if (text_color_ == NULL) text_color_ = new ::CMsgRGBA;
  return text_color_;
}
inline ::CMsgRGBA* CJBUsrMsg_ShowRoundIntro::release_text_color() {
  clear_has_text_color();
  ::CMsgRGBA* temp = text_color_;
  text_color_ = NULL;
  return temp;
}
inline void CJBUsrMsg_ShowRoundIntro::set_allocated_text_color(::CMsgRGBA* text_color) {
  delete text_color_;
  text_color_ = text_color;
  if (text_color) {
    set_has_text_color();
  } else {
    clear_has_text_color();
  }
}

// optional .CJBUsrMsg_ShowRoundIntro.CRoundIntroModel model1 = 5;
inline bool CJBUsrMsg_ShowRoundIntro::has_model1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro::set_has_model1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_has_model1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_model1() {
  if (model1_ != NULL) model1_->::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::Clear();
  clear_has_model1();
}
inline const ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& CJBUsrMsg_ShowRoundIntro::model1() const {
  return model1_ != NULL ? *model1_ : *default_instance_->model1_;
}
inline ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* CJBUsrMsg_ShowRoundIntro::mutable_model1() {
  set_has_model1();
  if (model1_ == NULL) model1_ = new ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel;
  return model1_;
}
inline ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* CJBUsrMsg_ShowRoundIntro::release_model1() {
  clear_has_model1();
  ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* temp = model1_;
  model1_ = NULL;
  return temp;
}
inline void CJBUsrMsg_ShowRoundIntro::set_allocated_model1(::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* model1) {
  delete model1_;
  model1_ = model1;
  if (model1) {
    set_has_model1();
  } else {
    clear_has_model1();
  }
}

// optional .CJBUsrMsg_ShowRoundIntro.CRoundIntroModel model2 = 6;
inline bool CJBUsrMsg_ShowRoundIntro::has_model2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CJBUsrMsg_ShowRoundIntro::set_has_model2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_has_model2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CJBUsrMsg_ShowRoundIntro::clear_model2() {
  if (model2_ != NULL) model2_->::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel::Clear();
  clear_has_model2();
}
inline const ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel& CJBUsrMsg_ShowRoundIntro::model2() const {
  return model2_ != NULL ? *model2_ : *default_instance_->model2_;
}
inline ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* CJBUsrMsg_ShowRoundIntro::mutable_model2() {
  set_has_model2();
  if (model2_ == NULL) model2_ = new ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel;
  return model2_;
}
inline ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* CJBUsrMsg_ShowRoundIntro::release_model2() {
  clear_has_model2();
  ::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* temp = model2_;
  model2_ = NULL;
  return temp;
}
inline void CJBUsrMsg_ShowRoundIntro::set_allocated_model2(::CJBUsrMsg_ShowRoundIntro_CRoundIntroModel* model2) {
  delete model2_;
  model2_ = model2;
  if (model2) {
    set_has_model2();
  } else {
    clear_has_model2();
  }
}

// -------------------------------------------------------------------

// CJBUsrMsg_DeathNotice

// optional int32 victim_index = 1;
inline bool CJBUsrMsg_DeathNotice::has_victim_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_victim_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_victim_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_DeathNotice::clear_victim_index() {
  victim_index_ = 0;
  clear_has_victim_index();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::victim_index() const {
  return victim_index_;
}
inline void CJBUsrMsg_DeathNotice::set_victim_index(::google::protobuf::int32 value) {
  set_has_victim_index();
  victim_index_ = value;
}

// optional int32 scorer_index = 2;
inline bool CJBUsrMsg_DeathNotice::has_scorer_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_scorer_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_scorer_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJBUsrMsg_DeathNotice::clear_scorer_index() {
  scorer_index_ = 0;
  clear_has_scorer_index();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::scorer_index() const {
  return scorer_index_;
}
inline void CJBUsrMsg_DeathNotice::set_scorer_index(::google::protobuf::int32 value) {
  set_has_scorer_index();
  scorer_index_ = value;
}

// optional int32 assister_index = 3;
inline bool CJBUsrMsg_DeathNotice::has_assister_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_assister_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_assister_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CJBUsrMsg_DeathNotice::clear_assister_index() {
  assister_index_ = 0;
  clear_has_assister_index();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::assister_index() const {
  return assister_index_;
}
inline void CJBUsrMsg_DeathNotice::set_assister_index(::google::protobuf::int32 value) {
  set_has_assister_index();
  assister_index_ = value;
}

// optional string killer_weapon = 4;
inline bool CJBUsrMsg_DeathNotice::has_killer_weapon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_killer_weapon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_killer_weapon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CJBUsrMsg_DeathNotice::clear_killer_weapon() {
  if (killer_weapon_ != &::google::protobuf::internal::kEmptyString) {
    killer_weapon_->clear();
  }
  clear_has_killer_weapon();
}
inline const ::std::string& CJBUsrMsg_DeathNotice::killer_weapon() const {
  return *killer_weapon_;
}
inline void CJBUsrMsg_DeathNotice::set_killer_weapon(const ::std::string& value) {
  set_has_killer_weapon();
  if (killer_weapon_ == &::google::protobuf::internal::kEmptyString) {
    killer_weapon_ = new ::std::string;
  }
  killer_weapon_->assign(value);
}
inline void CJBUsrMsg_DeathNotice::set_killer_weapon(const char* value) {
  set_has_killer_weapon();
  if (killer_weapon_ == &::google::protobuf::internal::kEmptyString) {
    killer_weapon_ = new ::std::string;
  }
  killer_weapon_->assign(value);
}
inline void CJBUsrMsg_DeathNotice::set_killer_weapon(const char* value, size_t size) {
  set_has_killer_weapon();
  if (killer_weapon_ == &::google::protobuf::internal::kEmptyString) {
    killer_weapon_ = new ::std::string;
  }
  killer_weapon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_DeathNotice::mutable_killer_weapon() {
  set_has_killer_weapon();
  if (killer_weapon_ == &::google::protobuf::internal::kEmptyString) {
    killer_weapon_ = new ::std::string;
  }
  return killer_weapon_;
}
inline ::std::string* CJBUsrMsg_DeathNotice::release_killer_weapon() {
  clear_has_killer_weapon();
  if (killer_weapon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = killer_weapon_;
    killer_weapon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_DeathNotice::set_allocated_killer_weapon(::std::string* killer_weapon) {
  if (killer_weapon_ != &::google::protobuf::internal::kEmptyString) {
    delete killer_weapon_;
  }
  if (killer_weapon) {
    set_has_killer_weapon();
    killer_weapon_ = killer_weapon;
  } else {
    clear_has_killer_weapon();
    killer_weapon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 weapon_id = 5;
inline bool CJBUsrMsg_DeathNotice::has_weapon_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_weapon_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_weapon_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CJBUsrMsg_DeathNotice::clear_weapon_id() {
  weapon_id_ = 0;
  clear_has_weapon_id();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::weapon_id() const {
  return weapon_id_;
}
inline void CJBUsrMsg_DeathNotice::set_weapon_id(::google::protobuf::int32 value) {
  set_has_weapon_id();
  weapon_id_ = value;
}

// optional int32 damage_type = 6;
inline bool CJBUsrMsg_DeathNotice::has_damage_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_damage_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_damage_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CJBUsrMsg_DeathNotice::clear_damage_type() {
  damage_type_ = 0;
  clear_has_damage_type();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::damage_type() const {
  return damage_type_;
}
inline void CJBUsrMsg_DeathNotice::set_damage_type(::google::protobuf::int32 value) {
  set_has_damage_type();
  damage_type_ = value;
}

// optional int32 custom_kill = 7;
inline bool CJBUsrMsg_DeathNotice::has_custom_kill() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_custom_kill() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_custom_kill() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CJBUsrMsg_DeathNotice::clear_custom_kill() {
  custom_kill_ = 0;
  clear_has_custom_kill();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::custom_kill() const {
  return custom_kill_;
}
inline void CJBUsrMsg_DeathNotice::set_custom_kill(::google::protobuf::int32 value) {
  set_has_custom_kill();
  custom_kill_ = value;
}

// optional int32 body_group = 8;
inline bool CJBUsrMsg_DeathNotice::has_body_group() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_body_group() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_body_group() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CJBUsrMsg_DeathNotice::clear_body_group() {
  body_group_ = 0;
  clear_has_body_group();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::body_group() const {
  return body_group_;
}
inline void CJBUsrMsg_DeathNotice::set_body_group(::google::protobuf::int32 value) {
  set_has_body_group();
  body_group_ = value;
}

// optional bool credit_assister = 9;
inline bool CJBUsrMsg_DeathNotice::has_credit_assister() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_credit_assister() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_credit_assister() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CJBUsrMsg_DeathNotice::clear_credit_assister() {
  credit_assister_ = false;
  clear_has_credit_assister();
}
inline bool CJBUsrMsg_DeathNotice::credit_assister() const {
  return credit_assister_;
}
inline void CJBUsrMsg_DeathNotice::set_credit_assister(bool value) {
  set_has_credit_assister();
  credit_assister_ = value;
}

// optional int32 victim_teamnum = 10;
inline bool CJBUsrMsg_DeathNotice::has_victim_teamnum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_victim_teamnum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_victim_teamnum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CJBUsrMsg_DeathNotice::clear_victim_teamnum() {
  victim_teamnum_ = 0;
  clear_has_victim_teamnum();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::victim_teamnum() const {
  return victim_teamnum_;
}
inline void CJBUsrMsg_DeathNotice::set_victim_teamnum(::google::protobuf::int32 value) {
  set_has_victim_teamnum();
  victim_teamnum_ = value;
}

// optional int32 killer_teamnum = 11;
inline bool CJBUsrMsg_DeathNotice::has_killer_teamnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_killer_teamnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_killer_teamnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CJBUsrMsg_DeathNotice::clear_killer_teamnum() {
  killer_teamnum_ = 0;
  clear_has_killer_teamnum();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::killer_teamnum() const {
  return killer_teamnum_;
}
inline void CJBUsrMsg_DeathNotice::set_killer_teamnum(::google::protobuf::int32 value) {
  set_has_killer_teamnum();
  killer_teamnum_ = value;
}

// optional int32 assister_teamnum = 12;
inline bool CJBUsrMsg_DeathNotice::has_assister_teamnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_assister_teamnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_assister_teamnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CJBUsrMsg_DeathNotice::clear_assister_teamnum() {
  assister_teamnum_ = 0;
  clear_has_assister_teamnum();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::assister_teamnum() const {
  return assister_teamnum_;
}
inline void CJBUsrMsg_DeathNotice::set_assister_teamnum(::google::protobuf::int32 value) {
  set_has_assister_teamnum();
  assister_teamnum_ = value;
}

// optional string killer_cname = 13;
inline bool CJBUsrMsg_DeathNotice::has_killer_cname() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_killer_cname() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_killer_cname() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CJBUsrMsg_DeathNotice::clear_killer_cname() {
  if (killer_cname_ != &::google::protobuf::internal::kEmptyString) {
    killer_cname_->clear();
  }
  clear_has_killer_cname();
}
inline const ::std::string& CJBUsrMsg_DeathNotice::killer_cname() const {
  return *killer_cname_;
}
inline void CJBUsrMsg_DeathNotice::set_killer_cname(const ::std::string& value) {
  set_has_killer_cname();
  if (killer_cname_ == &::google::protobuf::internal::kEmptyString) {
    killer_cname_ = new ::std::string;
  }
  killer_cname_->assign(value);
}
inline void CJBUsrMsg_DeathNotice::set_killer_cname(const char* value) {
  set_has_killer_cname();
  if (killer_cname_ == &::google::protobuf::internal::kEmptyString) {
    killer_cname_ = new ::std::string;
  }
  killer_cname_->assign(value);
}
inline void CJBUsrMsg_DeathNotice::set_killer_cname(const char* value, size_t size) {
  set_has_killer_cname();
  if (killer_cname_ == &::google::protobuf::internal::kEmptyString) {
    killer_cname_ = new ::std::string;
  }
  killer_cname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_DeathNotice::mutable_killer_cname() {
  set_has_killer_cname();
  if (killer_cname_ == &::google::protobuf::internal::kEmptyString) {
    killer_cname_ = new ::std::string;
  }
  return killer_cname_;
}
inline ::std::string* CJBUsrMsg_DeathNotice::release_killer_cname() {
  clear_has_killer_cname();
  if (killer_cname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = killer_cname_;
    killer_cname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_DeathNotice::set_allocated_killer_cname(::std::string* killer_cname) {
  if (killer_cname_ != &::google::protobuf::internal::kEmptyString) {
    delete killer_cname_;
  }
  if (killer_cname) {
    set_has_killer_cname();
    killer_cname_ = killer_cname;
  } else {
    clear_has_killer_cname();
    killer_cname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string assister_cname = 14;
inline bool CJBUsrMsg_DeathNotice::has_assister_cname() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_assister_cname() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_assister_cname() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CJBUsrMsg_DeathNotice::clear_assister_cname() {
  if (assister_cname_ != &::google::protobuf::internal::kEmptyString) {
    assister_cname_->clear();
  }
  clear_has_assister_cname();
}
inline const ::std::string& CJBUsrMsg_DeathNotice::assister_cname() const {
  return *assister_cname_;
}
inline void CJBUsrMsg_DeathNotice::set_assister_cname(const ::std::string& value) {
  set_has_assister_cname();
  if (assister_cname_ == &::google::protobuf::internal::kEmptyString) {
    assister_cname_ = new ::std::string;
  }
  assister_cname_->assign(value);
}
inline void CJBUsrMsg_DeathNotice::set_assister_cname(const char* value) {
  set_has_assister_cname();
  if (assister_cname_ == &::google::protobuf::internal::kEmptyString) {
    assister_cname_ = new ::std::string;
  }
  assister_cname_->assign(value);
}
inline void CJBUsrMsg_DeathNotice::set_assister_cname(const char* value, size_t size) {
  set_has_assister_cname();
  if (assister_cname_ == &::google::protobuf::internal::kEmptyString) {
    assister_cname_ = new ::std::string;
  }
  assister_cname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_DeathNotice::mutable_assister_cname() {
  set_has_assister_cname();
  if (assister_cname_ == &::google::protobuf::internal::kEmptyString) {
    assister_cname_ = new ::std::string;
  }
  return assister_cname_;
}
inline ::std::string* CJBUsrMsg_DeathNotice::release_assister_cname() {
  clear_has_assister_cname();
  if (assister_cname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = assister_cname_;
    assister_cname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_DeathNotice::set_allocated_assister_cname(::std::string* assister_cname) {
  if (assister_cname_ != &::google::protobuf::internal::kEmptyString) {
    delete assister_cname_;
  }
  if (assister_cname) {
    set_has_assister_cname();
    assister_cname_ = assister_cname;
  } else {
    clear_has_assister_cname();
    assister_cname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string victim_cname = 15;
inline bool CJBUsrMsg_DeathNotice::has_victim_cname() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_victim_cname() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_victim_cname() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CJBUsrMsg_DeathNotice::clear_victim_cname() {
  if (victim_cname_ != &::google::protobuf::internal::kEmptyString) {
    victim_cname_->clear();
  }
  clear_has_victim_cname();
}
inline const ::std::string& CJBUsrMsg_DeathNotice::victim_cname() const {
  return *victim_cname_;
}
inline void CJBUsrMsg_DeathNotice::set_victim_cname(const ::std::string& value) {
  set_has_victim_cname();
  if (victim_cname_ == &::google::protobuf::internal::kEmptyString) {
    victim_cname_ = new ::std::string;
  }
  victim_cname_->assign(value);
}
inline void CJBUsrMsg_DeathNotice::set_victim_cname(const char* value) {
  set_has_victim_cname();
  if (victim_cname_ == &::google::protobuf::internal::kEmptyString) {
    victim_cname_ = new ::std::string;
  }
  victim_cname_->assign(value);
}
inline void CJBUsrMsg_DeathNotice::set_victim_cname(const char* value, size_t size) {
  set_has_victim_cname();
  if (victim_cname_ == &::google::protobuf::internal::kEmptyString) {
    victim_cname_ = new ::std::string;
  }
  victim_cname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CJBUsrMsg_DeathNotice::mutable_victim_cname() {
  set_has_victim_cname();
  if (victim_cname_ == &::google::protobuf::internal::kEmptyString) {
    victim_cname_ = new ::std::string;
  }
  return victim_cname_;
}
inline ::std::string* CJBUsrMsg_DeathNotice::release_victim_cname() {
  clear_has_victim_cname();
  if (victim_cname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = victim_cname_;
    victim_cname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CJBUsrMsg_DeathNotice::set_allocated_victim_cname(::std::string* victim_cname) {
  if (victim_cname_ != &::google::protobuf::internal::kEmptyString) {
    delete victim_cname_;
  }
  if (victim_cname) {
    set_has_victim_cname();
    victim_cname_ = victim_cname;
  } else {
    clear_has_victim_cname();
    victim_cname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 kill_streak = 16;
inline bool CJBUsrMsg_DeathNotice::has_kill_streak() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CJBUsrMsg_DeathNotice::set_has_kill_streak() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CJBUsrMsg_DeathNotice::clear_has_kill_streak() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CJBUsrMsg_DeathNotice::clear_kill_streak() {
  kill_streak_ = 0;
  clear_has_kill_streak();
}
inline ::google::protobuf::int32 CJBUsrMsg_DeathNotice::kill_streak() const {
  return kill_streak_;
}
inline void CJBUsrMsg_DeathNotice::set_kill_streak(::google::protobuf::int32 value) {
  set_has_kill_streak();
  kill_streak_ = value;
}

// -------------------------------------------------------------------

// CJBUsrMsg_PlayerSpree

// optional int32 player_index = 1;
inline bool CJBUsrMsg_PlayerSpree::has_player_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_PlayerSpree::set_has_player_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_PlayerSpree::clear_has_player_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_PlayerSpree::clear_player_index() {
  player_index_ = 0;
  clear_has_player_index();
}
inline ::google::protobuf::int32 CJBUsrMsg_PlayerSpree::player_index() const {
  return player_index_;
}
inline void CJBUsrMsg_PlayerSpree::set_player_index(::google::protobuf::int32 value) {
  set_has_player_index();
  player_index_ = value;
}

// optional int32 streak = 2;
inline bool CJBUsrMsg_PlayerSpree::has_streak() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJBUsrMsg_PlayerSpree::set_has_streak() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJBUsrMsg_PlayerSpree::clear_has_streak() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJBUsrMsg_PlayerSpree::clear_streak() {
  streak_ = 0;
  clear_has_streak();
}
inline ::google::protobuf::int32 CJBUsrMsg_PlayerSpree::streak() const {
  return streak_;
}
inline void CJBUsrMsg_PlayerSpree::set_streak(::google::protobuf::int32 value) {
  set_has_streak();
  streak_ = value;
}

// -------------------------------------------------------------------

// CJBUsrMsg_SVTUpdate

// optional int32 alert_state = 1;
inline bool CJBUsrMsg_SVTUpdate::has_alert_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_SVTUpdate::set_has_alert_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_SVTUpdate::clear_has_alert_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_SVTUpdate::clear_alert_state() {
  alert_state_ = 0;
  clear_has_alert_state();
}
inline ::google::protobuf::int32 CJBUsrMsg_SVTUpdate::alert_state() const {
  return alert_state_;
}
inline void CJBUsrMsg_SVTUpdate::set_alert_state(::google::protobuf::int32 value) {
  set_has_alert_state();
  alert_state_ = value;
}

// optional float alert_time_remaining = 2;
inline bool CJBUsrMsg_SVTUpdate::has_alert_time_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJBUsrMsg_SVTUpdate::set_has_alert_time_remaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJBUsrMsg_SVTUpdate::clear_has_alert_time_remaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJBUsrMsg_SVTUpdate::clear_alert_time_remaining() {
  alert_time_remaining_ = 0;
  clear_has_alert_time_remaining();
}
inline float CJBUsrMsg_SVTUpdate::alert_time_remaining() const {
  return alert_time_remaining_;
}
inline void CJBUsrMsg_SVTUpdate::set_alert_time_remaining(float value) {
  set_has_alert_time_remaining();
  alert_time_remaining_ = value;
}

// optional float alert_time_total = 3;
inline bool CJBUsrMsg_SVTUpdate::has_alert_time_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CJBUsrMsg_SVTUpdate::set_has_alert_time_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CJBUsrMsg_SVTUpdate::clear_has_alert_time_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CJBUsrMsg_SVTUpdate::clear_alert_time_total() {
  alert_time_total_ = 0;
  clear_has_alert_time_total();
}
inline float CJBUsrMsg_SVTUpdate::alert_time_total() const {
  return alert_time_total_;
}
inline void CJBUsrMsg_SVTUpdate::set_alert_time_total(float value) {
  set_has_alert_time_total();
  alert_time_total_ = value;
}

// optional float last_alert_state_change = 4;
inline bool CJBUsrMsg_SVTUpdate::has_last_alert_state_change() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CJBUsrMsg_SVTUpdate::set_has_last_alert_state_change() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CJBUsrMsg_SVTUpdate::clear_has_last_alert_state_change() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CJBUsrMsg_SVTUpdate::clear_last_alert_state_change() {
  last_alert_state_change_ = 0;
  clear_has_last_alert_state_change();
}
inline float CJBUsrMsg_SVTUpdate::last_alert_state_change() const {
  return last_alert_state_change_;
}
inline void CJBUsrMsg_SVTUpdate::set_last_alert_state_change(float value) {
  set_has_last_alert_state_change();
  last_alert_state_change_ = value;
}

// optional float last_backup_dispatch = 5;
inline bool CJBUsrMsg_SVTUpdate::has_last_backup_dispatch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CJBUsrMsg_SVTUpdate::set_has_last_backup_dispatch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CJBUsrMsg_SVTUpdate::clear_has_last_backup_dispatch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CJBUsrMsg_SVTUpdate::clear_last_backup_dispatch() {
  last_backup_dispatch_ = 0;
  clear_has_last_backup_dispatch();
}
inline float CJBUsrMsg_SVTUpdate::last_backup_dispatch() const {
  return last_backup_dispatch_;
}
inline void CJBUsrMsg_SVTUpdate::set_last_backup_dispatch(float value) {
  set_has_last_backup_dispatch();
  last_backup_dispatch_ = value;
}

// optional int32 terrorists_on_start = 6;
inline bool CJBUsrMsg_SVTUpdate::has_terrorists_on_start() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CJBUsrMsg_SVTUpdate::set_has_terrorists_on_start() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CJBUsrMsg_SVTUpdate::clear_has_terrorists_on_start() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CJBUsrMsg_SVTUpdate::clear_terrorists_on_start() {
  terrorists_on_start_ = 0;
  clear_has_terrorists_on_start();
}
inline ::google::protobuf::int32 CJBUsrMsg_SVTUpdate::terrorists_on_start() const {
  return terrorists_on_start_;
}
inline void CJBUsrMsg_SVTUpdate::set_terrorists_on_start(::google::protobuf::int32 value) {
  set_has_terrorists_on_start();
  terrorists_on_start_ = value;
}

// optional int32 sneaks_on_start = 7;
inline bool CJBUsrMsg_SVTUpdate::has_sneaks_on_start() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CJBUsrMsg_SVTUpdate::set_has_sneaks_on_start() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CJBUsrMsg_SVTUpdate::clear_has_sneaks_on_start() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CJBUsrMsg_SVTUpdate::clear_sneaks_on_start() {
  sneaks_on_start_ = 0;
  clear_has_sneaks_on_start();
}
inline ::google::protobuf::int32 CJBUsrMsg_SVTUpdate::sneaks_on_start() const {
  return sneaks_on_start_;
}
inline void CJBUsrMsg_SVTUpdate::set_sneaks_on_start(::google::protobuf::int32 value) {
  set_has_sneaks_on_start();
  sneaks_on_start_ = value;
}

// -------------------------------------------------------------------

// CJBUsrMsg_Damage

// optional int32 victim_id = 1;
inline bool CJBUsrMsg_Damage::has_victim_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJBUsrMsg_Damage::set_has_victim_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJBUsrMsg_Damage::clear_has_victim_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJBUsrMsg_Damage::clear_victim_id() {
  victim_id_ = 0;
  clear_has_victim_id();
}
inline ::google::protobuf::int32 CJBUsrMsg_Damage::victim_id() const {
  return victim_id_;
}
inline void CJBUsrMsg_Damage::set_victim_id(::google::protobuf::int32 value) {
  set_has_victim_id();
  victim_id_ = value;
}

// optional int32 attacker_id = 2;
inline bool CJBUsrMsg_Damage::has_attacker_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJBUsrMsg_Damage::set_has_attacker_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJBUsrMsg_Damage::clear_has_attacker_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJBUsrMsg_Damage::clear_attacker_id() {
  attacker_id_ = 0;
  clear_has_attacker_id();
}
inline ::google::protobuf::int32 CJBUsrMsg_Damage::attacker_id() const {
  return attacker_id_;
}
inline void CJBUsrMsg_Damage::set_attacker_id(::google::protobuf::int32 value) {
  set_has_attacker_id();
  attacker_id_ = value;
}

// optional float damage = 3;
inline bool CJBUsrMsg_Damage::has_damage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CJBUsrMsg_Damage::set_has_damage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CJBUsrMsg_Damage::clear_has_damage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CJBUsrMsg_Damage::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline float CJBUsrMsg_Damage::damage() const {
  return damage_;
}
inline void CJBUsrMsg_Damage::set_damage(float value) {
  set_has_damage();
  damage_ = value;
}

// optional bool is_dead = 4;
inline bool CJBUsrMsg_Damage::has_is_dead() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CJBUsrMsg_Damage::set_has_is_dead() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CJBUsrMsg_Damage::clear_has_is_dead() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CJBUsrMsg_Damage::clear_is_dead() {
  is_dead_ = false;
  clear_has_is_dead();
}
inline bool CJBUsrMsg_Damage::is_dead() const {
  return is_dead_;
}
inline void CJBUsrMsg_Damage::set_is_dead(bool value) {
  set_has_is_dead();
  is_dead_ = value;
}

// optional bool is_combatant = 5;
inline bool CJBUsrMsg_Damage::has_is_combatant() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CJBUsrMsg_Damage::set_has_is_combatant() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CJBUsrMsg_Damage::clear_has_is_combatant() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CJBUsrMsg_Damage::clear_is_combatant() {
  is_combatant_ = false;
  clear_has_is_combatant();
}
inline bool CJBUsrMsg_Damage::is_combatant() const {
  return is_combatant_;
}
inline void CJBUsrMsg_Damage::set_is_combatant(bool value) {
  set_has_is_combatant();
  is_combatant_ = value;
}

// optional int32 dmg_bits = 6;
inline bool CJBUsrMsg_Damage::has_dmg_bits() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CJBUsrMsg_Damage::set_has_dmg_bits() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CJBUsrMsg_Damage::clear_has_dmg_bits() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CJBUsrMsg_Damage::clear_dmg_bits() {
  dmg_bits_ = 0;
  clear_has_dmg_bits();
}
inline ::google::protobuf::int32 CJBUsrMsg_Damage::dmg_bits() const {
  return dmg_bits_;
}
inline void CJBUsrMsg_Damage::set_dmg_bits(::google::protobuf::int32 value) {
  set_has_dmg_bits();
  dmg_bits_ = value;
}

// optional .CMsgVector dmg_origin = 7;
inline bool CJBUsrMsg_Damage::has_dmg_origin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CJBUsrMsg_Damage::set_has_dmg_origin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CJBUsrMsg_Damage::clear_has_dmg_origin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CJBUsrMsg_Damage::clear_dmg_origin() {
  if (dmg_origin_ != NULL) dmg_origin_->::CMsgVector::Clear();
  clear_has_dmg_origin();
}
inline const ::CMsgVector& CJBUsrMsg_Damage::dmg_origin() const {
  return dmg_origin_ != NULL ? *dmg_origin_ : *default_instance_->dmg_origin_;
}
inline ::CMsgVector* CJBUsrMsg_Damage::mutable_dmg_origin() {
  set_has_dmg_origin();
  if (dmg_origin_ == NULL) dmg_origin_ = new ::CMsgVector;
  return dmg_origin_;
}
inline ::CMsgVector* CJBUsrMsg_Damage::release_dmg_origin() {
  clear_has_dmg_origin();
  ::CMsgVector* temp = dmg_origin_;
  dmg_origin_ = NULL;
  return temp;
}
inline void CJBUsrMsg_Damage::set_allocated_dmg_origin(::CMsgVector* dmg_origin) {
  delete dmg_origin_;
  dmg_origin_ = dmg_origin;
  if (dmg_origin) {
    set_has_dmg_origin();
  } else {
    clear_has_dmg_origin();
  }
}

// optional int32 dmg_custom = 8;
inline bool CJBUsrMsg_Damage::has_dmg_custom() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CJBUsrMsg_Damage::set_has_dmg_custom() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CJBUsrMsg_Damage::clear_has_dmg_custom() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CJBUsrMsg_Damage::clear_dmg_custom() {
  dmg_custom_ = 0;
  clear_has_dmg_custom();
}
inline ::google::protobuf::int32 CJBUsrMsg_Damage::dmg_custom() const {
  return dmg_custom_;
}
inline void CJBUsrMsg_Damage::set_dmg_custom(::google::protobuf::int32 value) {
  set_has_dmg_custom();
  dmg_custom_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_ResetHud

// optional bool reset = 1;
inline bool CUsrMsg_ResetHud::has_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_ResetHud::set_has_reset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_ResetHud::clear_has_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_ResetHud::clear_reset() {
  reset_ = false;
  clear_has_reset();
}
inline bool CUsrMsg_ResetHud::reset() const {
  return reset_;
}
inline void CUsrMsg_ResetHud::set_reset(bool value) {
  set_has_reset();
  reset_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_GameTitle

// optional int32 dummy = 1;
inline bool CUsrMsg_GameTitle::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_GameTitle::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_GameTitle::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_GameTitle::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CUsrMsg_GameTitle::dummy() const {
  return dummy_;
}
inline void CUsrMsg_GameTitle::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_RequestState

// optional int32 dummy = 1;
inline bool CUsrMsg_RequestState::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_RequestState::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_RequestState::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_RequestState::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CUsrMsg_RequestState::dummy() const {
  return dummy_;
}
inline void CUsrMsg_RequestState::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CUsrMsg_ClientInfo

// optional int32 dummy = 1;
inline bool CUsrMsg_ClientInfo::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUsrMsg_ClientInfo::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUsrMsg_ClientInfo::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUsrMsg_ClientInfo::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CUsrMsg_ClientInfo::dummy() const {
  return dummy_;
}
inline void CUsrMsg_ClientInfo::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EJBUserMessages>() {
  return ::EJBUserMessages_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_jb_5fusermessages_2eproto__INCLUDED
